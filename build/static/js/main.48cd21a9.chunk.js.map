{"version":3,"sources":["firebase.js","Auth/signUp.js","Auth/logIn.js","Home/adoptMarker.js","Profile/post.js","Profile/postDisplay.js","Profile/comment.js","Profile/fullTreePage.js","Profile/editProfile.js","Profile/myTrees.js","Profile/profile.js","Profile/profileLink.js","Profile/publicTree.js","Home/adoptMap.js","Home/home.js","Home/feedback.js","Upload/uploadMarker.js","Upload/uploadTreeForm.js","main.js","theme.js","serviceWorker.js","index.js","images/tree.png","images/profilePic.png"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","useStyles","makeStyles","theme","root","width","SignUp","props","classes","style","backgroundColor","border","paddingLeft","paddingRight","Typography","variant","color","initialValues","displayName","email","password","confPassword","validate","values","errors","test","length","onSubmit","setSubmitting","setTimeout","formData","console","log","createUserWithEmailAndPassword","then","authUser","collection","add","username","imageUrl","uid","user","bio","acorns","updateProfile","catch","error","alert","message","setPage","touched","handleChange","handleSubmit","isSubmitting","autoComplete","Box","margin","component","TextField","className","type","label","name","Button","disabled","LogIn","signInWithEmailAndPassword","button","height","AdoptMarker","adoptstyle","tree","owner","textAlign","src","alt","onClick","function","size","spacing","image","description","post","Post","useState","progress","setProgress","resetForm","ref","put","on","snapshot","Math","round","bytesTransferred","totalBytes","child","getDownloadURL","url","where","treeId","get","querySnapshot","forEach","doc","id","data","update","psudeoId","random","toString","postedBy","postedbyId","timestamp","FieldValue","serverTimestamp","setFieldValue","align","Input","onChange","event","target","files","CircularProgress","value","multiline","rows","PostDisplay","state","comments","this","postId","orderBy","incomingComments","push","setState","prevProps","prevState","commentsep","toDate","toLocaleDateString","toLocaleTimeString","map","comment","commentDate","commentTime","key","React","Component","Comment","postedById","isMounted","FullTreePage","posts","postIds","bind","incomingPosts","incomingIds","postborder","main","postUpdate","index","EditProfile","noValidate","defaultValue","MyTrees","myTrees","Profile","profile","editing","setEdit","onSnapshot","Grid","container","item","xs","profilePic","ProfileLink","fullProfile","ownerId","thisProfile","docs","display","startIcon","Avatar","PublicTree","updateOwner","fullPage","thisTree","thisId","date","time","AdoptMap","publicTrees","setTree","displayTrees","bootstrapURLKeys","center","lat","lng","zoom","latitude","longitude","Home","dateNum","setDateNum","useEffect","dateObj","Date","month","getMonth","day","getDate","year","getFullYear","loggedIn","confirm","Feedback","setConfirm","UploadMarker","Marker","treeImg","UploadTreeForm","setDisplayTrees","unsubscribe","generatedId","buttonStyle","clickedButtonStyle","title","Main","page","setUser","onAuthStateChanged","headerstyle","gutterBottom","signOut","Theme","createMuiTheme","palette","primary","secondary","Boolean","window","location","hostname","match","ReactDOM","render","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.48cd21a9.chunk.js","sourcesContent":["import firebase from \"firebase\"\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyCqlMUtnbP4zqJ26Izex4TJ1h6j0aWgiKc\",\n  authDomain: \"tree-38cba.firebaseapp.com\",\n  databaseURL: \"https://tree-38cba.firebaseio.com\",\n  projectId: \"tree-38cba\",\n  storageBucket: \"tree-38cba.appspot.com\",\n  messagingSenderId: \"599594846214\",\n  appId: \"1:599594846214:web:52a656efb48940ad7fdb87\",\n  measurementId: \"G-PMMHZGH8TL\"\n})\n\nconst db = firebaseApp.firestore()\nconst auth = firebase.auth()\nconst storage = firebase.storage()\n\nexport { db, auth, storage }","import React from 'react';\nimport { auth, db } from \"../firebase\"\n\nimport { Formik, Field, Form } from 'formik';\nimport { Button, Typography, Box, makeStyles } from '@material-ui/core'\nimport { TextField } from 'formik-material-ui';\n\nconst useStyles = makeStyles((theme) => ({\n  \n  root: {\n    width: \"80%\"\n  }\n\n}))\n \nfunction SignUp(props) {\n\n  const classes = useStyles()\n\n  const signUp = (formData) => {\n\n    console.log(formData)\n\n  auth.createUserWithEmailAndPassword(formData.email, formData.password)\n  .then((authUser) => {\n\n    db.collection(\"profiles\").add({\n          username: formData.displayName,\n          imageUrl: null,\n          uid: authUser.user.uid,\n          bio: null,\n          acorns: 0\n        })\n\n  return authUser.user.updateProfile({\n      displayName: formData.displayName\n    })\n\n    \n\n  })\n  .catch((error) => alert(error.message))\n\n  props.setPage(\"home\")\n    \n}\n\n  const signupstyle = {\n    backgroundColor: \"#FAEBD7\",\n    border: \"4px solid brown\",\n    paddingLeft: \"10px\",\n    paddingRight: \"10px\"\n}\n\n  return (\n\n    <div style={signupstyle}>\n    <Typography variant=\"h2\" color=\"secondary\"> Sign Up: </Typography>\n    <Formik\n      initialValues = {{ \n        displayName: \"\", \n        email: \"\", \n        password: \"\",\n        confPassword: \"\"\n    }}\n\n      validate = {values => {\n        const errors = {};\n        if (!values.email) {\n          errors.email = 'Required';\n        } \n        else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n          errors.email = 'Invalid email address';\n        }\n\n        if (!values.displayName) {\n          errors.displayName = \"Required\"\n        }\n        else if (values.displayName.length > 15) {\n          errors.displayName = \"Display name cannot be longer than 15 characters\"\n        }\n\n        if (!values.password) {\n          errors.password = \"Required\"\n        }\n        else if (values.password.length < 6) {\n          errors.password = \"Password must be at least 6 characters long\"\n        }\n\n        if (!values.confPassword) {\n          errors.confPassword = \"Required\"\n        }\n        else if (values.password !== values.confPassword) {\n          errors.confPassword = \"Passwords must match\"\n        }\n\n        return errors\n      }}\n\n      onSubmit = {(values, { setSubmitting }) => {\n        setTimeout(() => {\n          signUp(values)\n          setSubmitting(false)\n        }, 400);\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        /* and other goodies */\n      }) => (\n      <Form onSubmit={handleSubmit} autoComplete=\"off\">\n        <Box margin={3}>\n          <Field\n            component={TextField}\n            className={classes.root}\n            type=\"text\"\n            label=\"Display Name\"\n            name=\"displayName\"\n          />\n        </Box>\n        <Box margin={3}>\n          <Field\n            component={TextField}\n            className={classes.root}\n            type=\"email\"\n            label=\"Email\"\n            name=\"email\"\n          />\n        </Box>\n        <Box margin={3}>\n          <Field\n            component={TextField}\n            className={classes.root}\n            type=\"password\"\n            label=\"Password\"\n            name=\"password\"\n          />\n        </Box>\n        <Box margin={3}>\n          <Field\n            component={TextField}\n            className={classes.root}\n            type=\"password\"\n            label=\"Confirm Password\"\n            name=\"confPassword\"\n          />\n        </Box>\n        <Button type=\"submit\" color=\"secondary\" variant=\"outlined\" disabled={isSubmitting}> Submit </Button>\n        <br />\n        <br />\n      </Form>\n      )}\n    </Formik>\n  </div>\n);\n\n}\n\n\n\nexport default SignUp","import React from 'react';\nimport { auth } from \"../firebase\"\n\nimport { Formik, Field, Form } from 'formik';\nimport { Button, Typography, Box, makeStyles } from '@material-ui/core'\nimport { TextField } from 'formik-material-ui';\n\n\nconst useStyles = makeStyles((theme) => ({\n  \n  root: {\n    width: \"80%\"\n  }\n\n}))\n\n \nfunction LogIn(props) {\n\n  const classes = useStyles()\n\n\n  const logIn = (formData) => {\n\n    auth.signInWithEmailAndPassword(formData.email, formData.password)\n    .catch((error) => alert(error.message))\n\n    props.setPage(\"home\")\n    \n}\n\n  const signupstyle = {\n    backgroundColor: \"#FAEBD7\",\n    border: \"4px solid brown\",\n    paddingLeft: \"10px\",\n    paddingRight: \"10px\"\n  }\n\n  return (\n\n    <div style={signupstyle}>\n    <Typography variant=\"h2\" color=\"secondary\"> Log In: </Typography>\n    <Formik\n      initialValues = {{ \n        email: \"\", \n        password: \"\"\n    }}\n\n      validate = {values => {\n        const errors = {};\n        if (!values.email) {\n          errors.email = 'Required';\n        } \n\n        if (!values.password) {\n          errors.password = \"Required\"\n\n        return errors\n      }}\n      }\n\n      onSubmit = {(values, { setSubmitting }) => {\n        setTimeout(() => {\n          logIn(values)\n          setSubmitting(false)\n        }, 400);\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        /* and other goodies */\n      }) => (\n      \n      <Form onSubmit={handleSubmit}>\n      <br/>\n        <Box margin={5}>\n          <Field\n            component={TextField}\n            className={classes.root}\n            type=\"email\"\n            label=\"Email\"\n            name=\"email\"\n          />\n        </Box>\n        {errors.email && touched.email}\n        <br/>\n        <Box margin={5}>\n          <Field\n            component={TextField}\n            className={classes.root}\n            type=\"password\"\n            label=\"Password\"\n            name=\"password\"\n          />\n        </Box>\n        <br/>\n        {errors.password && touched.password}\n        <Button type=\"submit\" color=\"secondary\" variant=\"outlined\" disabled={isSubmitting}> Submit </Button>\n        <br />\n        <br />\n      </Form>\n      )}\n    </Formik>\n  </div>\n);\n\n}\n\n\n\nexport default LogIn","import React from \"react\"\n\nimport { Button, makeStyles } from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme) => ({\n  \n  button: {\n   width: 5,\n   height: 20\n  }\n\n}))\n\nfunction AdoptMarker(props) {\n\n    const classes = useStyles()\n\n    let adoptstyle\n\n    if (props.tree.owner === props.uid) {\n      adoptstyle = {\n        color: \"white\",\n        backgroundColor: \"blue\",\n        textAlign: \"center\"\n      }\n\n      return (\n        <div>\n          <img src={props.tree.imageUrl} alt=\"\" width=\"62\" />\n          <Button variant=\"outlined\" className={classes.button} style={adoptstyle} onClick={() => props.function(props.tree)}> Owner  </Button>\n        </div>\n      )\n    }\n      \n    else if (props.tree.owner) {\n      adoptstyle = {\n        color: \"white\",\n        backgroundColor: \"green\",\n        textAlign: \"center\"\n      }\n\n      return (\n        <div>\n          <img src={props.tree.imageUrl} alt=\"\" width=\"62\" />\n          <Button variant=\"outlined\" size=\"small\" className={classes.button} style={adoptstyle} onClick={() => props.function(props.tree)}> Owned </Button>\n        </div>\n    )\n    }\n    else {\n      adoptstyle = {\n        color: \"brown\",\n        backgroundColor: \"yellow\",\n        textAlign: \"center\"\n      }\n\n      return (\n        <div>\n          <img src={props.tree.imageUrl} alt=\"\" width=\"62\" />\n          <Button variant=\"outlined\" className={classes.button} style={adoptstyle} onClick={() => props.function(props.tree)}> Orphan </Button>\n        </div>\n    )\n    }\n    \n  }\n\n\nexport default AdoptMarker\n","import React, { useState } from 'react';\nimport { db, storage } from \"../firebase\"\nimport firebase from \"firebase\"\n\nimport { Formik, Form } from 'formik';\nimport { Button, Typography, TextField, Input, CircularProgress, makeStyles } from '@material-ui/core'\n\n\nconst useStyles = makeStyles((theme) => ({\n  \n  error: {\n    margin: theme.spacing(3),\n    color: \"red\"\n  },\n  image: {\n    margin: theme.spacing(3),\n    width: '30ch'\n  },\n  description: {\n    margin: theme.spacing(3),\n    width: '80%'\n  },\n  post: {\n    backgroundColor: \"#FAEBD7\",\n    paddingLeft: \"2ch\",\n    paddingRight: \"2ch\",\n    border: \"4px solid brown\"\n  }\n}))\n \nfunction Post(props) {\n\n  const [progress, setProgress] = useState(0)\n  const classes = useStyles()\n\n  const handleUpload = (formData) => {\n\n    console.log(formData)\n\n    const uploadTask = storage.ref(\"images/\" + formData.image.name + \"-\" + props.uid).put(formData.image)\n\n      uploadTask.on(\"state_changed\", (snapshot) => {\n        const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100)\n        setProgress(progress)\n      },\n      (error) => {\n        alert(error.message)\n      },\n      () => {\n        storage.ref(\"images\").child(formData.image.name + \"-\" + props.uid).getDownloadURL().then(url => {\n          db.collection(\"publicTrees\").where(\"psudeoId\", \"==\", props.treeId).get()\n            .then(function(querySnapshot) {\n              querySnapshot.forEach(function(doc) {\n              console.log(doc.id, \" => \", doc.data())\n\n                db.collection(\"publicTrees\").doc(doc.id).update({\n                  imageUrl: url,\n                }).then(\n                  db.collection(\"publicTrees\").doc(doc.id).collection(\"posts\").add({\n                  psudeoId: Math.random().toString(36),\n                  postedBy: props.username,\n                  postedbyId: props.uid,\n                  timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                  imageUrl: url,\n                  description: formData.description\n                })\n                )\n\n              })\n            })\n        })\n      })\n\n  }\n\n\n  return (\n\n    <div className={classes.post}>\n    <Formik\n      initialValues = {{ \n        description: \"\",\n        image: null\n    }}\n\n    validate = {values => {\n      const errors = {}\n\n      if (!values.image) {\n          errors.image = \"Upload an image of your tree to post\"\n        }\n      \n\n      return errors\n    }}\n\n\n      onSubmit = {(values, { setSubmitting, resetForm }) => {\n        setTimeout(() => {\n          handleUpload(values)\n          setSubmitting(false)\n          resetForm({})\n        }, 400);\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue\n      }) => (\n      <Form onSubmit={handleSubmit} autoComplete=\"off\" className={classes.root} >\n      <br/>\n      <div>\n        <hr />\n        <Typography align=\"center\" variant=\"h3\" color=\"secondary\"> Post on Tree </Typography>\n        <hr />\n        <br/>\n\n        <br/>\n        <Typography variant=\"h5\" color=\"secondary\"> Picture of Tree: </Typography>\n        <Input className={classes.image} id=\"image\" name=\"image\" type=\"file\"\n          onChange={(event) => {\n            setFieldValue(\"image\", event.target.files[0])\n          }} />\n          <CircularProgress variant=\"static\" value={progress} />\n\n      </div>\n      \n      <br/>\n\n      <Typography variant=\"h5\" color=\"secondary\"> Enter a Description: </Typography>\n\n      <TextField\n          label=\"Description\"\n          name=\"description\"\n          multiline\n          className={classes.description}\n          rows={8}\n          variant=\"outlined\"\n          onChange={handleChange}\n        />\n\n      <Typography className={classes.error}> {errors.image} </Typography>\n\n      <br/>\n\n      <Button type=\"submit\" color=\"secondary\" variant=\"outlined\" disabled={isSubmitting}> Submit </Button>\n\n      <br />\n      <br />\n\n      </Form>\n\n      \n\n      \n\n      )}\n    </Formik>\n  </div>\n)\n\n}\n\n\n\nexport default Post","import React from \"react\"\n\nimport { db } from \"../firebase\"\n\nimport { Typography } from \"@material-ui/core\"\n\nclass PostDisplay extends React.Component {\n\n   constructor() {\n    super()\n    this.state = {\n      comments: []\n    }\n  }\n\n\n    componentDidMount() {\n\n    db.collection(\"publicTrees\").doc(this.props.treeId).collection(\"posts\")\n    .doc(this.props.postId).collection(\"comments\").orderBy(\"timestamp\", \"desc\")\n    .get().then((querySnapshot) => {\n\n      let incomingComments = []\n\n      querySnapshot.forEach(function(doc) {\n        incomingComments.push(doc.data())\n      })\n\n      this.setState({\n        comments: incomingComments\n      })\n\n    })\n\n   }\n\n   componentDidUpdate(prevProps, prevState, snapshot) {\n\n    if (this.state !== prevState) {\n\n      db.collection(\"publicTrees\").doc(this.props.treeId).collection(\"posts\")\n      .doc(this.props.postId).collection(\"comments\").orderBy(\"timestamp\", \"desc\")\n      .get().then((querySnapshot) => {\n\n        let incomingComments = []\n\n        querySnapshot.forEach(function(doc) {\n          incomingComments.push(doc.data())\n        })\n\n        this.setState({\n          comments: incomingComments\n        })\n\n      })\n    } \n  }\n\n   render() {\n  \n\n   const commentstyle = {\n      paddingLeft: \"10px\",\n      paddingRight: \"10px\",\n      backgroundColor: \"#87CEFA\",\n      border: \"4px solid blue\"\n   }\n\n   const commentsep = {\n      border: \"1px solid blue\"\n   }\n\n   let comments = this.state.comments\n\n    return (\n      <div >\n        <div>\n          <img src={this.props.post.imageUrl} alt=\"\" width=\"100%\" /> \n          <Typography variant=\"h4\" color=\"secondary\" > {this.props.post.description} </Typography>\n          <Typography variant=\"h5\" color=\"secondary\"> Posted By: {this.props.post.postedBy} </Typography>\n          {this.props.post.timestamp ? \n          <Typography align=\"right\" variant=\"h5\" color=\"secondary\"> {this.props.post.timestamp.toDate().toLocaleDateString() + \" @ \" + this.props.post.timestamp.toDate().toLocaleTimeString()} </Typography> :\n          <Typography align=\"right\" variant=\"h5\" color=\"secondary\"> \"@ Right Now\" </Typography>\n          }\n          \n          \n        </div>\n        <div style={commentstyle} >\n          {comments.length > 0 ? comments.map(comment => {\n\n            let commentDate = \"\"\n            let commentTime = \"\"\n            \n            if (comment.timestamp) {\n              commentDate = comment.timestamp.toDate().toLocaleDateString()\n              commentTime = comment.timestamp.toDate().toLocaleTimeString()\n            } \n\n            if (comment.imageUrl) {\n              return (\n                <div key={comment.psudeoId}>\n\n                  {comments[0].psudeoId === comment.psudeoId ? null : <hr style={commentsep}/>}\n                  \n                  <Typography variant=\"h6\" color=\"secondary\"> <b>{comment.postedBy}:</b> {comment.comment} </Typography>\n                  <img src={comment.imageUrl} alt=\"\" width=\"50%\" />\n                  <Typography align=\"right\" variant=\"h6\" color=\"secondary\"> {commentDate + \" @ \" + commentTime} </Typography>\n                  \n                </div>\n            )\n\n            }\n\n            else {\n              return (\n                <div key={comment.psudeoId}>\n\n                {comments[0].psudeoId === comment.psudeoId ? null : <hr style={commentsep}/>}\n\n                <Typography variant=\"h6\" color=\"secondary\"> <b>{comment.postedBy}:</b> {comment.comment} </Typography>\n                <Typography align=\"right\" variant=\"h6\" color=\"secondary\"> {commentDate + \" @ \" + commentTime} </Typography>\n                </div>\n              )\n            }\n            \n          }) :\n          <Typography variant=\"h5\" color=\"secondary\" align=\"center\"> No comments </Typography> }\n        </div>\n      </div>\n    )\n   }\n\n  }\n\n\nexport default PostDisplay","\nimport React, { useState } from 'react';\nimport { db, storage } from \"../firebase\"\nimport firebase from \"firebase\"\n\nimport { Formik, Form } from 'formik';\nimport { Button, Typography, TextField, Input, CircularProgress, makeStyles } from '@material-ui/core'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(1)\n  },\n  error: {\n    margin: theme.spacing(3),\n    color: \"red\"\n  },\n  image: {\n    margin: theme.spacing(3),\n    width: '35ch'\n  },\n  comment: {\n    margin: theme.spacing(3),\n    width: '80%',\n  }\n}))\n \nfunction Comment(props) {\n\n  const [progress, setProgress] = useState(0)\n  const classes = useStyles()\n\n  const handleUpload = (formData) => {\n\n    if (formData.image) {\n\n      const uploadTask = storage.ref(\"images/\" + formData.image.name + \"-\" + props.uid).put(formData.image)\n\n            uploadTask.on(\"state_changed\", (snapshot) => {\n              const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100)\n              setProgress(progress)\n            },\n            (error) => {\n              alert(error.message)\n            },\n            () => {\n              storage.ref(\"images\").child(formData.image.name + \"-\" + props.uid).getDownloadURL().then(url => {\n                db.collection(\"publicTrees\").doc(props.treeId).collection(\"posts\")\n                .doc(props.postId).collection(\"comments\").add({\n                  imageUrl: url,\n                  timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                  postedBy: props.username,\n                  postedById: props.uid,\n                  comment: formData.comment,\n                  psudeoId: Math.random().toString(36)\n\n                })\n              })\n            })\n\n    }\n\n    else {\n\n      db.collection(\"publicTrees\").doc(props.treeId).collection(\"posts\")\n      .doc(props.postId).collection(\"comments\").add({\n        imageUrl: null,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        postedBy: props.username,\n        postedById: props.uid,\n        comment: formData.comment,\n        psudeoId: Math.random().toString(36),\n\n      })\n\n    }\n\n    \n\n  }\n\n\n  return (\n\n    <div>\n    <Formik\n      initialValues = {{ \n        comment: \"\",\n        image: null\n    }}\n\n    validate = {values => {\n      const errors = {}\n\n      if (!values.image && !values.comment) {\n          errors.image = \"Upload at least an image or a comment\"\n        }\n      \n\n      return errors\n    }}\n\n\n      onSubmit = {(values, { setSubmitting, resetForm }) => {\n        setTimeout(() => {\n          handleUpload(values)\n          setSubmitting(false)\n          resetForm({})\n        }, 400);\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue\n        /* and other goodies */\n      }) => (\n      <Form onSubmit={handleSubmit} autoComplete=\"off\" className={classes.root} >\n      <Typography variant=\"h4\" color=\"secondary\"> Comment: </Typography>\n      <br/>\n        <Typography variant=\"h5\" color=\"secondary\"> Enter a comment: </Typography>\n        <TextField\n            label=\"Comment\"\n            name=\"comment\"\n            multiline\n            className={classes.comment}\n            rows={3}\n            variant=\"outlined\"\n            onChange={handleChange}\n          />\n\n          <div>\n            <br/>\n            <Typography variant=\"h5\" color=\"secondary\"> Add a Picture: </Typography>\n            <Input className={classes.image} id=\"image\" name=\"image\" type=\"file\"\n              onChange={(event) => {\n                setFieldValue(\"image\", event.target.files[0])\n              }} />\n              <CircularProgress variant=\"static\" value={progress} />\n          </div>\n\n      <Typography className={classes.error}> {errors.image} </Typography>\n\n      <Button type=\"submit\" color=\"secondary\" variant=\"outlined\" disabled={isSubmitting}> Comment </Button>\n\n      </Form>\n\n      )}\n    </Formik>\n  </div>\n)\n\n}\n\n\n\nexport default Comment\n\n","import React from \"react\"\nimport Post from \"./post\"\nimport PostDisplay from \"./postDisplay\"\nimport Comment from \"./comment\"\nimport { db } from \"../firebase\"\n\nimport { Typography } from \"@material-ui/core\"\n\nlet isMounted = false\n\nclass FullTreePage extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      posts: null,\n      postIds: null\n    }\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  componentDidMount() {\n\n    isMounted = true\n\n    db.collection(\"publicTrees\").doc(this.props.treeId).collection(\"posts\")\n    .orderBy(\"timestamp\", \"desc\")\n    .get().then((querySnapshot) => {\n\n      let incomingPosts = []\n      let incomingIds = []\n\n      querySnapshot.forEach(function(doc) {\n        incomingPosts.push(doc.data())\n        incomingIds.push(doc.id)\n      })\n\n       if (isMounted) {\n        this.setState({\n          posts: incomingPosts,\n          postIds: incomingIds\n        })\n      }\n\n    })\n             \n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n\n    if (this.state !== prevState) {\n\n      db.collection(\"publicTrees\").doc(this.props.treeId).collection(\"posts\")\n      .orderBy(\"timestamp\", \"desc\")\n      .get().then((querySnapshot) => {\n\n        let incomingPosts = []\n        let incomingIds = []\n\n        querySnapshot.forEach(function(doc) {\n          incomingPosts.push(doc.data())\n          incomingIds.push(doc.id)\n        })\n\n          this.setState({\n            posts: incomingPosts,\n            postIds: incomingIds\n          })\n\n      })\n    } \n  }\n  \n\n  componentWillUnmount(){\n    isMounted = false\n  }\n\n\n\n\n  handleChange(event) {\n\n    const {name, value} = event.target\n\n    this.setState({[name]: value})\n  }\n\n\n\n\n  render() {\n\n    const treestyle = {\n        backgroundColor: \"#90EE90\",\n      }\n\n    const postborder = {\n      border: \"2px dotted brown\"\n    }\n\n    if (this.state.posts) {\n\n    let posts = this.state.posts\n\n      return (\n        <div style={treestyle}>\n\n          <div>\n            {(this.props.uid === this.props.tree.owner) && this.props.main ? \n            <Post postUpdate={this.postUpdate} username={this.props.username} treeId={this.props.tree.psudeoId} uid={this.props.uid} /> :\n            null \n            }\n          </div>\n\n          <div>\n            \n            <br/>\n            <hr/>\n              <Typography variant=\"h3\" color=\"secondary\" align=\"center\"> Posts </Typography>\n            <hr/>\n            {posts.length > 0 ? posts.map((post, index) => {\n              return <div key={post.psudeoId}>\n              <PostDisplay post={post} treeId={this.props.treeId} postId={this.state.postIds[index]}/>\n              <Comment uid={this.props.uid} username={this.props.username} post={post} treeId={this.props.treeId} postId={this.state.postIds[index]} />\n              <hr style={postborder}/>\n              </div>\n            }) :\n              <Typography variant=\"h4\" color=\"secondary\"> No Posts on Tree </Typography>}\n\n          </div>\n\n        </div>\n      )\n\n    }\n\n    else {\n\n      return (\n        <div>\n          <Typography variant=\"h4\" color=\"secondary\"> Loading... </Typography>\n        </div>\n      )\n\n    }\n\n  \n    }\n\n}\n\nexport default FullTreePage\n","import React, { useState } from 'react';\nimport { db, storage } from \"../firebase\"\n\nimport { Formik, Form } from 'formik';\nimport { Button, Typography, TextField, Input, CircularProgress, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  \n  root: {\n      margin: theme.spacing(1),\n      width: '75ch'\n  }\n}))\n \nfunction EditProfile(props) {\n\n  const [progress, setProgress] = useState(0)\n  const classes = useStyles()\n\n  const handleUpload = (formData) => {\n\n    if (formData.image) {\n      const uploadTask = storage.ref(\"images/\" + formData.image.name + \"-\" + props.uid).put(formData.image)\n\n      uploadTask.on(\"state_changed\", (snapshot) => {\n        const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100)\n        setProgress(progress)\n      },\n      (error) => {\n        alert(error.message)\n      },\n      () => {\n        storage.ref(\"images\").child(formData.image.name + \"-\" + props.uid).getDownloadURL().then(url => {\n          db.collection(\"profiles\").where(\"uid\", \"==\", props.uid)\n          .get()\n          .then((querySnapshot) => {\n              querySnapshot.forEach((doc) => {\n                  db.collection(\"profiles\").doc(doc.id).update({\n                    imageUrl: url,\n                    bio: formData.bio\n                  })\n              })\n\n          })\n          .catch(function(error) {\n              console.log(\"Error getting documents: \", error)\n          })\n              })\n\n            }\n        )\n    }\n    else {\n      db.collection(\"profiles\").where(\"uid\", \"==\", props.uid)\n          .get()\n          .then((querySnapshot) => {\n              querySnapshot.forEach((doc) => {\n                  console.log(doc.id, \" => \", doc.data())\n                  db.collection(\"profiles\").doc(doc.id).update({\n                    bio: formData.bio\n                  })\n              })\n\n          })\n          .catch(function(error) {\n              console.log(\"Error getting documents: \", error)\n          })\n\n    }\n  }\n\n\n\n\n  return (\n\n    <div>\n    <Typography variant=\"h2\" color=\"secondary\"> Edit Profile: </Typography>\n    <Formik\n      initialValues = {{ \n        bio: props.bio,\n        image: null\n    }}\n\n    validate = {values => {\n        const errors = {}\n\n      return errors\n    }}\n\n\n      onSubmit = {(values, { setSubmitting }) => {\n        setTimeout(() => {\n          handleUpload(values)\n          setSubmitting(false)\n        }, 400);\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue\n        /* and other goodies */\n      }) => (\n      <Form onSubmit={handleSubmit} className={classes.root} noValidate autoComplete=\"off\" >\n      <Typography variant=\"h5\" color=\"secondary\"> Biography: </Typography>\n\n      <TextField\n          label=\"Biography\"\n          name=\"bio\"\n          defaultValue={props.bio}\n          multiline\n          className={classes.root}\n          rows={8}\n          variant=\"outlined\"\n          onChange={handleChange}\n        />\n\n        \n      <div>\n        <br/>\n        <br/>\n        <Typography variant=\"h5\" color=\"secondary\"> Profile Picture: </Typography>\n        <Input id=\"image\" name=\"image\" type=\"file\"\n          onChange={(event) => {\n            setFieldValue(\"image\", event.target.files[0]);\n          }} />\n          <CircularProgress variant=\"static\" value={progress} />\n\n          <br/>\n          <br/>\n\n      </div>\n\n\n      <Button type=\"submit\" color=\"secondary\" variant=\"outlined\" disabled={isSubmitting}> Submit </Button>\n\n      </Form>\n\n      )}\n    </Formik>\n  </div>\n)\n\n}\n\n\n\nexport default EditProfile","import React from \"react\"\nimport PublicTree from \"./publicTree\"\nimport { db } from \"../firebase\"\n\nimport { Typography } from '@material-ui/core'\n\n\n\nclass MyTrees extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      myTrees: []\n    }\n  }\n\n  componentDidMount() {\n    db.collection(\"publicTrees\").where(\"owner\", \"==\", this.props.uid)\n    .get()\n    .then((querySnapshot) => {\n        let myTrees = []\n        querySnapshot.forEach((doc) => {\n            myTrees.push(doc.data())\n        })\n        this.setState({\n              myTrees: myTrees\n            })\n\n    })\n    .catch(function(error) {\n        console.log(\"Error getting documents: \", error)\n    })\n  }\n\n\n  render() {\n\n    let myTrees = this.state.myTrees\n\n       return (\n      <div>\n        {myTrees.length > 0 ? myTrees.map(tree => {\n          return (\n            <div key={tree.psudeoId}>\n            <PublicTree uid={this.props.uid} key={tree.psudeoId} username={this.props.username} psudeoId={tree.psudeoId} main={this.props.main} />,\n            <hr/>\n          </div>\n          )\n          \n        }) :\n        <Typography variant=\"h5\" color=\"secondary\"> No Trees </Typography>}\n      </div>\n    )\n}\n  \n}\n\nexport default MyTrees","import React from \"react\"\nimport EditProfile from \"./editProfile\"\nimport MyTrees from \"./myTrees\"\nimport { db } from \"../firebase\"\n\nimport { Button, Typography, Grid } from \"@material-ui/core\"\nimport profilePic from \"../images/profilePic.png\"\n\nlet isMounted = false\n\nclass Profile extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      profile: null,\n      editing: false\n    }\n    this.setEdit = this.setEdit.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  setEdit() {\n    this.setState({\n      editing: !this.state.editing\n    })\n  }\n\n   handleChange(event) {\n\n    const {name, value} = event.target\n\n    this.setState({[name]: value})\n  }\n\n  componentDidMount() {\n\n    isMounted = true\n    db.collection(\"profiles\").where(\"uid\", \"==\", this.props.uid)\n    .onSnapshot(querySnapshot => {\n        querySnapshot.forEach(doc => {\n            if (isMounted) {\n              this.setState({\n              profile: doc.data(),\n              editing: false\n              })\n            }\n            \n        })\n    });\n\n  }\n\n  componentWillUnmount(){\n    isMounted = false\n  }\n\n  \n\n  render() {\n\n      const profilestyle = {\n        backgroundColor: \"#FAEBD7\",\n        border: \"4px solid brown\",\n        paddingLeft: \"10px\",\n        paddingRight: \"10px\"\n      }\n\n    if (this.state.editing) {\n\n      return (\n      <div>\n        <EditProfile bio={this.state.profile.bio} setEdit={this.setEdit} uid={this.props.uid}/>\n        <br/>\n        <Button variant=\"outlined\" color=\"secondary\" onClick={this.setEdit}> Back to Profile </Button>   \n      </div>\n      )\n\n    }\n\n    else if (this.state.profile) {\n\n      return (\n      <div style={profilestyle}>\n        \n        <Typography variant=\"h2\" align=\"center\" color=\"secondary\"> {this.props.username} </Typography>\n        <hr/>\n        <Grid container spacing={4}>\n          <Grid item xs={6}>\n            {this.state.profile.imageUrl ? \n              <img src={this.state.profile.imageUrl} alt=\"\" width=\"100%\" /> :\n              <img src={profilePic} alt=\"\" width=\"100%\" />\n            }\n            \n          </Grid>\n          <Grid item xs={6}>\n            <Typography variant=\"h2\" align=\"left\" color=\"secondary\"> Acorns: {this.state.profile.acorns} </Typography>\n          </Grid>\n        </Grid>\n        \n        <Typography variant=\"h5\" align=\"left\" color=\"secondary\"> {this.state.profile.bio} </Typography>\n        <br/>\n        {this.props.main ?\n        <Button variant=\"outlined\" color=\"secondary\" onClick={this.setEdit}> Edit Profile </Button> :\n        null\n        }\n        \n\n        <hr/>\n        <Typography variant=\"h2\" align=\"center\" color=\"secondary\"> Adopted Trees </Typography>\n        <hr/>\n        <MyTrees uid={this.props.uid} username={this.props.username} main={this.props.main}/>\n\n        \n      </div>\n      )\n      \n    }\n\n    else {\n\n      return (\n        <div>\n          <Typography variant=\"h2\" align=\"left\" color=\"secondary\"> Loading... </Typography>\n        </div>\n      )\n\n    }\n    \n  }\n}\n\nexport default Profile","\nimport React from \"react\"\nimport { db } from \"../firebase\"\nimport Profile from \"./profile\"\n\nimport { Typography, Button, Avatar } from \"@material-ui/core\"\n\n\n class ProfileLink extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      profile: null,\n      fullProfile: false\n    }\n    \n  }\n\n  componentDidMount() {\n    db.collection(\"profiles\").where(\"uid\", \"==\", this.props.ownerId).onSnapshot(snapshot => {\n      let thisProfile = null\n\n      snapshot.docs.forEach(doc => {\n          thisProfile = doc.data()\n      })\n      \n        this.setState({\n          profile: thisProfile\n      })\n      \n    })\n  }\n\n  render() {\n\n    if (this.state.profile) {\n\n      const ownerstyle = {\n        backgroundColor: \"#FAEBD7\"\n      }\n\n      return (\n        <div>\n        <Typography variant=\"h5\" align=\"left\" color=\"secondary\" display=\"inline\"> Owner: </Typography>\n        <Button style={ownerstyle} variant=\"outlined\" startIcon={<Avatar src={this.state.profile.imageUrl}/>} onClick={() => this.setState({fullProfile: !this.state.fullProfile})}> {this.state.profile.username}\n      </Button>\n      {this.state.fullProfile ?\n      <Profile uid={this.props.ownerId} username={this.state.profile.username} main={false} /> :\n      null\n      }\n        </div>\n      )\n    }\n\n    else {\n      return (\n        <Typography> Loading... </Typography>\n      )\n    }\n\n  }\n\n}\n\nexport default ProfileLink","import React from \"react\"\nimport FullTreePage from \"./fullTreePage\"\nimport ProfileLink from \"./profileLink\"\nimport { db } from \"../firebase\"\n\nimport { Button, Typography } from \"@material-ui/core\"\n\n\nlet isMounted = false\n\nclass PublicTree extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      fullPage: false,\n      tree: null,\n      treeId: null\n    }\n    this.updateOwner = this.updateOwner.bind(this)\n    \n  }\n\n  componentDidMount() {\n    isMounted = true\n    db.collection(\"publicTrees\").onSnapshot(snapshot => {\n      let thisTree = null\n      let thisId = null\n\n      snapshot.docs.forEach(doc => {\n        if(doc.data().psudeoId === this.props.psudeoId) {\n          thisTree = doc.data()\n          thisId = doc.id\n        }\n      })\n      \n      if (isMounted) {\n        this.setState({\n          tree: thisTree,\n          treeId: thisId\n      })\n      }\n      \n    })\n  }\n\n  componentWillUnmount(){\n    isMounted = false\n  }\n\n  updateOwner = (owner) => {\n    db.collection(\"publicTrees\").where(\"psudeoId\", \"==\", this.props.psudeoId)\n      .get()\n      .then((querySnapshot) => {\n          querySnapshot.forEach((doc) => {\n              db.collection(\"publicTrees\").doc(doc.id).update({\n                owner: owner,\n              })\n          })\n      })\n      .catch(function(error) {\n          console.log(\"Error getting documents: \", error)\n      })\n\n  }\n\n\n\n  render() {\n\n    const treestyle = {\n        backgroundColor: \"#90EE90\",\n        textAlign: \"left\",\n        paddingLeft: \"10px\",\n        paddingRight: \"10px\",\n        border: \"4px solid brown\"\n\n      }\n\n        if(this.state.tree) {\n\n        let tree = this.state.tree\n\n         console.log(this.state.tree.owner)\n\n            let date = \"\"\n            let time = \"\"\n            \n            if (tree.timestamp) {\n              date = tree.timestamp.toDate().toLocaleDateString()\n              time = tree.timestamp.toDate().toLocaleTimeString()\n            } \n\n            return (\n              <div style={treestyle}>\n                <Typography variant=\"h2\" color=\"secondary\"> {tree.name} </Typography>\n                \n                {tree.owner ? \n                  null :\n                  <Button variant=\"outlined\" color=\"secondary\" onClick={() => this.updateOwner(this.props.uid)}> Adopt Tree </Button>}\n\n                {(tree.owner === this.props.uid) && this.props.main ? \n                  <Button variant=\"outlined\" color=\"secondary\" onClick={() => this.updateOwner(null)}> Release from Care </Button> :\n                  null}\n\n                <div>\n                <br/>\n                <img src={tree.imageUrl} alt=\"\" width=\"100%\" />\n                </div>\n\n                <br />\n\n                {tree.owner && this.props.main ? \n                <ProfileLink ownerId={tree.owner}/> :\n                null\n                }\n                \n                <Typography variant=\"h5\" color=\"secondary\" align=\"right\"> {date + \" \" + time} </Typography>\n                {this.state.fullPage ? \n                <Button variant=\"outlined\" color=\"secondary\" onClick={() => this.setState({fullPage: false})}> Close Posts </Button> :\n                <Button variant=\"outlined\" color=\"secondary\" onClick={() => this.setState({fullPage: true})}> View Posts </Button>\n                }\n                \n                <br />\n                <br />\n\n                {this.state.fullPage ? \n                [<FullTreePage uid={this.props.uid} treeId={this.state.treeId} username={this.props.username} tree={this.state.tree} main={this.props.main}/>,\n                <Button variant=\"outlined\" color=\"secondary\" onClick={() => this.setState({fullPage: false})}> Close Posts </Button>,\n                <br />,\n                <br />] :\n                null}\n              </div>\n          \n        )\n        }\n\n        else{\n\n          return (\n            <Typography variant=\"h3\" color=\"secondary\"> Loading... </Typography>\n          )\n          \n        }\n    \n  }\n}\n\nexport default PublicTree","import React from 'react'\nimport GoogleMapReact from 'google-map-react'\nimport { db } from \"../firebase\"\nimport AdoptMarker from \"./adoptMarker\"\nimport PublicTree from \"../Profile/publicTree\"\n\nimport { Button } from \"@material-ui/core\"\n\nlet isMounted = true\n\nclass AdoptMap extends React.Component {\n\n   constructor() {\n    super()\n    this.state = {\n      publicTrees: [],\n      tree: null\n    }\n    this.setTree = this.setTree.bind(this)\n  }\n\n  setTree(tree) {\n    this.setState({\n      tree: tree\n      })\n  }\n\n\n  componentDidMount() {\n    isMounted = true\n    db.collection(\"publicTrees\").onSnapshot(snapshot => {\n      if(isMounted) {\n        this.setState({publicTrees: snapshot.docs.map(doc => doc.data())})\n      }\n    })\n  }\n\n  componentWillUnmount(){\n    isMounted = false\n  }\n\n\n  render() {\n\n    var displayTrees = this.state.publicTrees\n\n    if(this.state.tree) {\n      return (\n        <div>\n          <PublicTree uid={this.props.uid} username={this.props.username} psudeoId={this.state.tree.psudeoId} main={true} />\n          <br/>\n          <Button variant=\"outlined\" color=\"secondary\" onClick={() => this.setTree(null)}> Return to Map </Button>\n        </div>\n      )\n\n    }\n\n    else {\n\n      return (\n        <div>\n          <div style={{ height: \"100vh\",  width: \"100%\" }}>\n            <GoogleMapReact\n              bootstrapURLKeys={{ key: \"AIzaSyBiB3iNngJM_kFWKxSv9a30O3fww7YTiWA\"}}\n              center={{lat : 48.0401, lng : -122.4063}}\n              zoom={10}\n            >\n          {displayTrees.length > 0 ? displayTrees.map(tree => {\n            return <AdoptMarker key={tree.psudeoId} uid={this.props.uid} lat={tree.latitude} lng={tree.longitude} function={this.setTree} tree={tree} />\n          }) :  null }\n            \n            </GoogleMapReact>\n          </div>\n        </div>\n    )\n    }\n    \n    \n  }\n}\n\nexport default AdoptMap;","import React, { useState, useEffect } from \"react\"\nimport AdoptMap from \"./adoptMap\"\n\nimport { Typography } from '@material-ui/core'\n\nfunction Home(props) {\n\n    const [dateNum, setDateNum] = useState(null)\n\n    useEffect(() => {\n    \n      var dateObj = new Date()\n      var month = dateObj.getMonth()\n      var day = dateObj.getDate()\n      var year = dateObj.getFullYear()\n\n      setDateNum(year + month + day)\n\n    }, [])\n\n    const messagestyle = {\n      backgroundColor: \"#FAEBD7\",\n      border: \"4px solid brown\",\n      paddingLeft: \"10px\",\n      paddingRight: \"10px\"\n    }\n\n    console.log(dateNum)\n\n    if (props.loggedIn) {\n\n      return (\n      <div>\n      <br />\n        <AdoptMap uid={props.uid} username={props.username} />      \n      </div>\n    )\n\n    }\n\n    else {\n\n      return (\n      <div>\n      <br/>\n          <div style={messagestyle}>\n            <Typography variant=\"h5\" color=\"secondary\" align=\"left\"> Welcome to Community Tree! </Typography>\n            <br/>\n            <Typography variant=\"h5\" color=\"secondary\" align=\"left\"> Our goal is to provide people with a vehicle to adopt and care for public trees in their communities. </Typography>\n            <br/>\n            <Typography variant=\"h5\" color=\"secondary\" align=\"left\"> Take a look around. Upload a tree in your community that needs care. Adopt a tree that you wish to help. </Typography>\n            <br/>\n            <Typography variant=\"h5\" color=\"secondary\" align=\"left\"> Plant a public tree and document its life. </Typography>\n            <br/>\n            <Typography variant=\"h5\" color=\"secondary\" align=\"left\"> Check back often. Make suggestions. We want to make this as user friendly as possible. </Typography>\n            <br/>\n            <Typography variant=\"h5\" color=\"secondary\" align=\"left\"> Login to view the community driven site! </Typography>\n            <br/>\n            <Typography variant=\"h5\" color=\"secondary\" align=\"left\"> Peace, </Typography>\n            <br/>\n            <Typography variant=\"h5\" color=\"secondary\" align=\"left\"> Community Tree </Typography>\n          </div>\n        \n      </div>\n    )\n\n    }\n    \n  }\n\nexport default Home","import React, { useState } from 'react';\nimport { db } from \"../firebase\"\n\nimport firebase from \"firebase\"\n\nimport { Formik, Form } from 'formik';\nimport { Button, Typography, Box, TextField, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  confirm: {\n    color: \"green\"\n  },\n  error: {\n    color: \"red\"\n  },\n  email: {\n    margin: theme.spacing(1),\n    width: \"50%\"\n  },\n  message: {\n    margin: theme.spacing(1),\n    width: '80%'\n  }\n}))\n\n \nfunction Feedback(props) {\n\n  const classes = useStyles()\n  const [confirm, setConfirm] = useState(\"\")\n\n  const feedback = (formData) => {\n\n    db.collection(\"feedback\").add({\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n            username: props.username,\n            email: formData.email,\n            message: formData.message\n          })\n    \n}\n\n  const signupstyle = {\n  backgroundColor: \"#FAEBD7\",\n  paddingLeft: \"10px\",\n  border: \"4px solid brown\"\n}\n\n  return (\n\n    <div style={signupstyle}>\n    <Typography variant=\"h2\" color=\"secondary\"> Feedback: </Typography>\n    <Formik\n      initialValues = {{  \n        email: \"\", \n        message: \"\"\n    }}\n\n      validate = {values => {\n        const errors = {};\n\n        if (!values.message) {\n          errors.message = \"Please enter a message\"\n        }\n\n        setConfirm(\"\")\n\n        return errors\n      }}\n\n      onSubmit = {(values, { setSubmitting, resetForm }) => {\n        setTimeout(() => {\n          feedback(values)\n          setSubmitting(false)\n          resetForm({})\n          setConfirm(\"Feedback recieved, thank you.\")\n\n        }, 400);\n      }}\n    >\n      {({\n        values,\n        errors,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        /* and other goodies */\n      }) => (\n      <Form onSubmit={handleSubmit} autoComplete=\"off\">\n        \n        <Box margin={7}>\n          <TextField\n            className={classes.message}\n            multiline\n            rows={4}\n            variant=\"outlined\"\n            type=\"text\"\n            label=\"Message\"\n            name=\"message\"\n            onChange={handleChange}\n          />\n        </Box>\n\n        <Box margin={7}>\n          <TextField\n            className={classes.email}\n            type=\"text\"\n            label=\"Return Email (Optional)\"\n            name=\"email\"\n            onChange={handleChange}\n          />\n        </Box>\n\n        <Typography className={classes.error} > {errors.message} </Typography>\n        <Typography className={classes.confirm} > {confirm} </Typography>\n        <br/>\n       \n        <Button type=\"submit\" color=\"secondary\" variant=\"outlined\" disabled={isSubmitting}> Send </Button>\n        <br />\n        <br />\n      </Form>\n      )}\n    </Formik>\n  </div>\n);\n\n}\n\n\n\nexport default Feedback","import React from \"react\"\n\n\nclass UploadMarker extends React.Component {\n\n  render() {\n\n      return (\n      <div>\n        <img src={this.props.imageUrl} alt=\"\" height=\"50\" width=\"50\" />\n      </div>\n      )\n    \n    \n  }\n}\n\nexport default UploadMarker\n","import React, { useState, useEffect } from 'react';\nimport { db, storage } from \"../firebase\"\nimport firebase from \"firebase\"\n\nimport GoogleMapReact from 'google-map-react';\nimport UploadMarker from \"./uploadMarker\"\nimport treeImg from \"../images/tree.png\"\n\n\nimport { Formik, Form } from 'formik';\nimport { Button, Typography, TextField, Input, CircularProgress, Box, makeStyles } from '@material-ui/core'\n\nconst Marker = () => <div><img src={treeImg} alt=\"\" height=\"50\" width=\"50\" /></div>;\n\nconst useStyles = makeStyles((theme) => ({\n  confirm: {\n    color: \"green\"\n  },\n  error: {\n    color: \"red\"\n  },\n  name: {\n    margin: theme.spacing(1),\n    width: '40ch'\n  },\n  description: {\n    margin: theme.spacing(1),\n    width: '80%'\n  }\n}))\n \nfunction UploadTreeForm(props) {\n\n  const [progress, setProgress] = useState(0)\n  const [displayTrees, setDisplayTrees] = useState([])\n  const [confirm, setConfirm] = useState(\"\")\n\n  const classes = useStyles()\n\n  const handleUpload = (formData) => {\n\n    const uploadTask = storage.ref(\"images/\" + formData.image.name + \"-\" + props.uid).put(formData.image)\n\n      uploadTask.on(\"state_changed\", (snapshot) => {\n        const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100)\n        setProgress(progress)\n      },\n      (error) => {\n        alert(error.message)\n      },\n      () => {\n\n        let generatedId = Math.random().toString(36)\n\n        storage.ref(\"images\").child(formData.image.name + \"-\" + props.uid).getDownloadURL().then(url => {\n          db.collection(\"publicTrees\").add({\n            psudeoId: generatedId,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n            latitude: formData.lat,\n            longitude: formData.lng,\n            name: formData.name,\n            owner: props.uid,\n            imageUrl: url,\n          }).then(\n            db.collection(\"publicTrees\").where(\"psudeoId\", \"==\", generatedId).get()\n            .then(function(querySnapshot) {\n              querySnapshot.forEach(function(doc) {\n              console.log(doc.id, \" => \", doc.data())\n\n                db.collection(\"publicTrees\").doc(doc.id).collection(\"posts\").add({\n                  psudeoId: Math.random().toString(36),\n                  postedBy: props.username,\n                  postedbyId: props.uid,\n                  timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                  imageUrl: url,\n                  description: formData.description\n                })\n\n              })\n            })\n          )\n        })\n      })\n\n  }\n\n  useEffect(() => {\n\n  const unsubscribe = db.collection(\"publicTrees\").onSnapshot(snapshot => {\n        setDisplayTrees(snapshot.docs.map(doc => doc.data()))\n\n    })\n\n    return () => {\n      unsubscribe()\n    }\n\n  }, [])\n\n  const uploadstyle = {\n    backgroundColor: \"#FAEBD7\",\n    border: \"4px solid brown\",\n    paddingLeft: \"10px\",\n    paddingRight: \"10px\"\n  }\n\n\n  return (\n\n    <div style={uploadstyle}>\n    <Typography variant=\"h2\" color=\"secondary\"> Upload a Tree: </Typography>\n    <Formik\n      initialValues = {{ \n        name: \"\",\n        description: \"\",\n        lat: 0,\n        lng: 0,\n        image: null\n    }}\n\n    validate = {values => {\n      const errors = {}\n\n      if (!values.name) {\n          errors.name = \"Tree name required\"\n        }\n\n      if (!values.description) {\n          errors.description = \"Please enter a description for the tree\"\n        }\n\n      if (!values.image) {\n          errors.image = \"Upload an image for your tree\"\n        }\n        \n      if (values.lat === 0 && values.lng === 0) {\n          errors.lat = \"Locate your tree on the Google Map above\"\n        }\n      \n      setConfirm(\"\")\n      \n      return errors\n    }}\n\n\n      onSubmit = {(values, { setSubmitting, resetForm }) => {\n        setTimeout(() => {\n          handleUpload(values)\n          setSubmitting(false)\n          resetForm({})\n          setConfirm(\"Tree upload success.\")\n\n        }, 400);\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue\n        /* and other goodies */\n      }) => (\n      <Form onSubmit={handleSubmit} autoComplete=\"off\" >\n      <br/>\n      <Typography variant=\"h5\" color=\"secondary\"> Name the Tree: </Typography>\n\n      <Box margin={3}>\n          <TextField\n          label=\"Name\"\n          name=\"name\"\n          className={classes.name}\n          onChange={handleChange}\n        />\n      </Box>\n      \n      <br/>\n      <br/>\n      \n      <Typography variant=\"h5\" color=\"secondary\"> Enter a Description: </Typography>\n\n      <Box margin = {3}>\n      <TextField\n          label=\"Description\"\n          name=\"description\"\n          multiline\n          className={classes.description}\n          rows={8}\n          variant=\"outlined\"\n          onChange={handleChange}\n        />\n      </Box>\n\n      <div style={{ height: \"100vh\", width: \"100%\" }}>\n        <br/>\n        <Typography variant=\"h5\" color=\"secondary\"> Locate: </Typography>\n        <br/>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: \"AIzaSyBiB3iNngJM_kFWKxSv9a30O3fww7YTiWA\"}}\n          center={{lat : 48.0401, lng : -122.4063}}\n          zoom={10}\n          onClick={(event) => {\n\n            setFieldValue(\"lat\", event.lat)\n            setFieldValue(\"lng\", event.lng)\n            \n          }}\n        >\n\n      {displayTrees.length > 0 ? displayTrees.map(tree => {\n        return <UploadMarker key={tree.psudeoId} lat={tree.latitude} lng={tree.longitude} imageUrl={tree.imageUrl} />\n      }) :  null }\n\n       <Marker\n            lat={values.lat}\n            lng={values.lng}\n          />\n\n        \n          \n        </GoogleMapReact>\n    </div>\n\n        \n      <div>\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        <Typography variant=\"h5\" color=\"secondary\"> Picture of Tree: </Typography>\n        <Input id=\"image\" name=\"image\" type=\"file\"\n          onChange={(event) => {\n            setFieldValue(\"image\", event.target.files[0])\n          }} />\n          <CircularProgress variant=\"static\" value={progress} />\n\n          <br/>\n\n      </div>\n\n      <br/>\n\n      <Typography className={classes.error}> {errors.name} </Typography>\n      <Typography className={classes.error}> {errors.description} </Typography>\n      <Typography className={classes.error}> {errors.lat} </Typography>\n      <Typography className={classes.error}> {errors.image} </Typography>\n      <Typography className={classes.confirm}> {confirm} </Typography>\n\n      <br/>\n\n      <Button type=\"submit\" color=\"secondary\" variant=\"outlined\" disabled={isSubmitting}> Submit </Button>\n\n      <br />\n      <br />\n\n      </Form>\n\n      \n\n      )}\n    </Formik>\n  </div>\n)\n\n}\n\n\n\nexport default UploadTreeForm","import React, { useState, useEffect } from \"react\"\n\nimport { Button, Typography, Grid, makeStyles } from \"@material-ui/core\"\n\nimport SignUp from \"./Auth/signUp\"\nimport LogIn from \"./Auth/logIn\"\nimport Home from \"./Home/home\"\nimport Feedback from \"./Home/feedback\"\nimport UploadTreeForm from \"./Upload/uploadTreeForm\"\nimport Profile from \"./Profile/profile\"\n\nimport treeImg from \"./images/tree.png\"\nimport \"./style.css\"\n\nimport { auth } from \"./firebase\"\n\nconst useStyles = makeStyles({\n  \n  buttonStyle: {\n    backgroundColor: \"#9ccc65\"\n  },\n  clickedButtonStyle: {\n    backgroundColor: \"black\",\n    color: \"white\"\n  },\n  title: {\n    display: \"inline\"\n  }\n\n})\n\nfunction Main(props) {\n\n  const [page, setPage] = useState(props.page)\n  const [user, setUser] = useState(null)\n\n  const classes = useStyles()\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(function(authUser)  {\n\n      if (authUser) {\n        setUser(authUser)\n       \n      } \n      else {\n        setUser(null)\n      }\n\n    })\n\n    return () => {\n      unsubscribe()\n    }\n\n  }, [user])\n\n    const headerstyle = {\n      textAlign: \"center\"\n    }\n\n    if (page === \"home\") {\n\n      return (\n        <div>\n\n          <div style={headerstyle}>\n\n          <img src={treeImg} alt=\"\" width=\"50\" /> \n          <Typography className={classes.title} gutterBottom variant=\"h2\" align=\"center\" color=\"secondary\"> Community Tree </Typography>\n          <img src={treeImg} alt=\"\" width=\"50\" />\n\n          <br/>\n          <br/>\n\n          <Button className={classes.clickedButtonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"home\")}>home</Button>\n          \n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"upload\")}>upload</Button>) :\n          null\n          }\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"profile\")}>{user.displayName ? user.displayName : \"profile\"}</Button>) :\n          null\n          }\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"feedback\")}>feedback</Button>) :\n          null\n          }\n\n           {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => [auth.signOut(), setPage(\"home\")]}>logout</Button>) :\n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"login\")}>login</Button>)\n          }\n\n          </div>\n\n          {user ?\n          <Home uid={user.uid} username={user.displayName} loggedIn={true} /> :\n          <Home loggedIn={false} />\n          }\n\n        </div>\n      )\n      \n      \n    }\n\n\n    else if (page === \"upload\") {\n\n\n      return (\n        <div>\n\n          <div style={headerstyle}>\n\n          <img src={treeImg} alt=\"\" width=\"50\" />\n          <Typography className={classes.title} gutterBottom variant=\"h2\" align=\"center\" color=\"secondary\"> Community Tree </Typography>\n          <img src={treeImg} alt=\"\" width=\"50\" />\n\n          <br/>\n          <br/>\n\n          <Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"home\")}>home</Button>\n          \n          {user ? \n          (<Button className={classes.clickedButtonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"upload\")}>upload</Button>) :\n          null\n          }\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"profile\")}>{user.displayName}</Button>) :\n          null\n          }\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"feedback\")}>feedback</Button>) :\n          null\n          }\n\n           {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => [auth.signOut(), setPage(\"home\")]}>logout</Button>) :\n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"login\")}>login</Button>)\n          }\n\n\n          </div>\n\n          <br />\n          <UploadTreeForm uid={user.uid} username={user.displayName} />\n\n        </div>\n      )\n    }\n\n    else if (page === \"profile\") {\n\n\n      return (\n        <div>\n\n          <div style={headerstyle}>\n\n          <img src={treeImg} alt=\"\" width=\"50\" />\n          <Typography className={classes.title} gutterBottom variant=\"h2\" align=\"center\" color=\"secondary\"> Community Tree </Typography>\n          <img src={treeImg} alt=\"\" width=\"50\" />\n\n          <br/>\n          <br/>\n\n\n          <Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"home\")}>home</Button>\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"upload\")}>upload</Button>) :\n          null\n          }\n\n          {user ? \n          (<Button className={classes.clickedButtonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"profile\")}>{user.displayName}</Button>) :\n          null\n          }\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"feedback\")}>feedback</Button>) :\n          null\n          }\n\n           {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => [auth.signOut(), setPage(\"home\")]}>logout</Button>) :\n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"login\")}>login</Button>)\n          }\n\n\n          </div>\n\n        <br/>\n\n        <Profile uid={user.uid} username={user.displayName} main={true} />\n\n        </div>\n      )\n    }\n\n    else if (page === \"login\") {\n\n\n      return (\n        <div>\n\n          <div style={headerstyle}>\n\n          <img src={treeImg} alt=\"\" width=\"50\" />\n          <Typography className={classes.title} gutterBottom variant=\"h2\" align=\"center\" color=\"secondary\"> Community Tree </Typography>\n          <img src={treeImg} alt=\"\" width=\"50\" />\n\n          <br/>\n          <br/>\n\n          <Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"home\")}>home</Button>\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"upload\")}>upload</Button>) :\n          null\n          }\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"profile\")}>{user.displayName}</Button>) :\n          null\n          }\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"feedback\")}>feedback</Button>) :\n          null\n          }\n\n           {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => [auth.signOut(), setPage(\"home\")]}>logout</Button>) :\n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"login\")}>login</Button>)\n          }\n\n          </div>\n\n          <br/>\n\n          <Grid container spacing={3}>\n            <Grid item xs={6}>\n              <SignUp setPage={setPage}/>\n            </Grid>\n            <Grid item xs={6}>\n              <LogIn setPage={setPage}/>\n            </Grid>\n          </Grid>\n\n        </div>\n      )\n    }\n\n    else if (page === \"feedback\") {\n\n\n      return (\n        <div>\n\n          <div style={headerstyle}>\n\n          <img src={treeImg} alt=\"\" width=\"50\" />\n          <Typography className={classes.title} gutterBottom variant=\"h2\" align=\"center\" color=\"secondary\"> Community Tree </Typography>\n          <img src={treeImg} alt=\"\" width=\"50\" />\n\n          <br/>\n          <br/>\n\n          <Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"home\")}>home</Button>\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"upload\")}>upload</Button>) :\n          null\n          }\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"profile\")}>{user.displayName}</Button>) :\n          null\n          }\n\n          {user ? \n          (<Button className={classes.clickedButtonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"feedback\")}>feedback</Button>) :\n          null\n          }\n\n           {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => [auth.signOut(), setPage(\"home\")]}>logout</Button>) :\n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"login\")}>login</Button>)\n          }\n\n          </div>\n\n          <br/>\n\n          <Feedback username={user.displayName} />\n\n\n        </div>\n      )\n    }\n\n    \n  \n    \n  }\n    \n\nexport default Main","import { createMuiTheme } from \"@material-ui/core/styles\"\n\nconst Theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#555555\",\n    },\n    secondary: {\n      main: \"#5d4037\"\n    }\n  }\n})\n\nexport default Theme","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Main from './main'\nimport Theme from \"./theme\"\nimport { ThemeProvider } from \"@material-ui/core/styles\"\n\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n\n    <ThemeProvider theme={Theme} >\n      <Main page=\"home\" />\n    </ThemeProvider>,\n  document.getElementById(\"root\")\n\n)\n\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/tree.aef0521d.png\";","module.exports = __webpack_public_path__ + \"static/media/profilePic.cd4f33f9.png\";"],"sourceRoot":""}