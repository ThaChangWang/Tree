{"version":3,"sources":["firebase.js","Auth/signUp.js","Auth/logIn.js","Home/quoteDay.js","Profile/post.js","Profile/postDisplay.js","Profile/comment.js","Profile/fullTreePage.js","Profile/publicTree.js","Home/treeDay.js","Home/home.js","Home/feedback.js","Upload/uploadMarker.js","Upload/uploadTreeForm.js","Find/adoptMarker.js","Find/adoptMap.js","Profile/editProfile.js","Profile/myTrees.js","Profile/profile.js","main.js","theme.js","serviceWorker.js","index.js","images/tree.png","images/star.png","images/profilePic.png"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","useStyles","makeStyles","theme","root","width","SignUp","props","classes","style","backgroundColor","Typography","variant","color","initialValues","displayName","email","password","confPassword","validate","values","errors","test","length","onSubmit","setSubmitting","setTimeout","formData","createUserWithEmailAndPassword","then","authUser","collection","add","imageUrl","uid","user","bio","updateProfile","catch","error","alert","message","setPage","touched","handleChange","handleSubmit","isSubmitting","autoComplete","Box","margin","component","TextField","className","type","label","name","Button","disabled","LogIn","signInWithEmailAndPassword","QuoteDay","useState","quote","setQuote","useEffect","onSnapshot","snapshot","quotes","docs","map","doc","data","todaysNum","random","border","align","spacing","image","description","Post","progress","setProgress","resetForm","ref","put","on","Math","round","bytesTransferred","totalBytes","child","getDownloadURL","url","timestamp","FieldValue","serverTimestamp","treeId","psudeoId","toString","postedBy","setFieldValue","Input","id","onChange","event","target","files","CircularProgress","value","multiline","rows","comment","PostDisplay","comments","setComments","date","time","post","toDate","toLocaleDateString","toLocaleTimeString","unsubscribe","orderBy","incomingComments","forEach","postId","push","src","alt","height","paddingLeft","paddingRight","commentDate","commentTime","key","Comment","username","isMounted","FullTreePage","state","posts","bind","incomingPosts","tree","setState","this","poststyle","owner","React","Component","PublicTree","updateOwner","where","get","querySnapshot","update","console","log","fullPage","thisTree","treestyle","textAlign","onClick","TreeDay","setTree","trees","treeofday","display","Home","dateNum","setDateNum","dateObj","Date","month","getMonth","day","getDate","year","getFullYear","messagestyle","loggedIn","Grid","container","item","xs","star","confirm","Feedback","setConfirm","UploadMarker","Marker","treeImg","UploadTreeForm","displayTrees","setDisplayTrees","lat","lng","latitude","longitude","bootstrapURLKeys","center","zoom","AdoptMarker","adoptstyle","function","AdoptMap","publicTrees","EditProfile","noValidate","defaultValue","MyTrees","myTrees","Profile","profile","editing","setEdit","profilestyle","profilePic","buttonStyle","clickedButtonStyle","title","Main","page","setUser","onAuthStateChanged","headerstyle","gutterBottom","signOut","Theme","createMuiTheme","palette","primary","main","secondary","Boolean","window","location","hostname","match","ReactDOM","render","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.599a321e.chunk.js","sourcesContent":["import firebase from \"firebase\"\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyCqlMUtnbP4zqJ26Izex4TJ1h6j0aWgiKc\",\n  authDomain: \"tree-38cba.firebaseapp.com\",\n  databaseURL: \"https://tree-38cba.firebaseio.com\",\n  projectId: \"tree-38cba\",\n  storageBucket: \"tree-38cba.appspot.com\",\n  messagingSenderId: \"599594846214\",\n  appId: \"1:599594846214:web:52a656efb48940ad7fdb87\",\n  measurementId: \"G-PMMHZGH8TL\"\n})\n\nconst db = firebaseApp.firestore()\nconst auth = firebase.auth()\nconst storage = firebase.storage()\n\nexport { db, auth, storage }","import React from 'react';\nimport { auth, db } from \"../firebase\"\n\nimport { Formik, Field, Form } from 'formik';\nimport { Button, Typography, Box, makeStyles } from '@material-ui/core'\nimport { TextField } from 'formik-material-ui';\n\nconst useStyles = makeStyles((theme) => ({\n  \n  root: {\n    width: \"30ch\"\n  }\n\n}))\n \nfunction SignUp(props) {\n\n  const classes = useStyles()\n\n  const signUp = (formData) => {\n\n  auth.createUserWithEmailAndPassword(formData.email, formData.password)\n  .then((authUser) => {\n\n    db.collection(\"profiles\").add({\n          imageUrl: null,\n          uid: authUser.user.uid,\n          bio: null\n        })\n\n  return authUser.user.updateProfile({\n      displayName: formData.displayName\n    })\n\n    \n\n  })\n  .catch((error) => alert(error.message))\n\n  props.setPage(\"home\")\n    \n}\n\n  const signupstyle = {\n  backgroundColor: \"#FAEBD7\"\n}\n\n  return (\n\n    <div style={signupstyle}>\n    <Typography variant=\"h2\" color=\"secondary\"> Sign Up: </Typography>\n    <Formik\n      initialValues = {{ \n        displayName: \"\", \n        email: \"\", \n        password: \"\",\n        confPassword: \"\"\n    }}\n\n      validate = {values => {\n        const errors = {};\n        if (!values.email) {\n          errors.email = 'Required';\n        } \n        else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n          errors.email = 'Invalid email address';\n        }\n\n        if (!values.displayName) {\n          errors.displayName = \"Required\"\n        }\n        else if (values.displayName.length > 15) {\n          errors.displayName = \"Display name cannot be longer than 15 characters\"\n        }\n\n        if (!values.password) {\n          errors.password = \"Required\"\n        }\n        else if (values.password.length < 6) {\n          errors.password = \"Password must be at least 6 characters long\"\n        }\n\n        if (!values.confPassword) {\n          errors.confPassword = \"Required\"\n        }\n        else if (values.password !== values.confPassword) {\n          errors.confPassword = \"Passwords must match\"\n        }\n\n        return errors\n      }}\n\n      onSubmit = {(values, { setSubmitting }) => {\n        setTimeout(() => {\n          signUp(values)\n          setSubmitting(false)\n        }, 400);\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        /* and other goodies */\n      }) => (\n      <Form onSubmit={handleSubmit} autoComplete=\"off\">\n        <Box margin={3}>\n          <Field\n            component={TextField}\n            className={classes.root}\n            type=\"text\"\n            label=\"Display Name\"\n            name=\"displayName\"\n          />\n        </Box>\n        <Box margin={3}>\n          <Field\n            component={TextField}\n            className={classes.root}\n            type=\"email\"\n            label=\"Email\"\n            name=\"email\"\n          />\n        </Box>\n        <Box margin={3}>\n          <Field\n            component={TextField}\n            className={classes.root}\n            type=\"password\"\n            label=\"Password\"\n            name=\"password\"\n          />\n        </Box>\n        <Box margin={3}>\n          <Field\n            component={TextField}\n            className={classes.root}\n            type=\"password\"\n            label=\"Confirm Password\"\n            name=\"confPassword\"\n          />\n        </Box>\n        <Button type=\"submit\" color=\"secondary\" variant=\"outlined\" disabled={isSubmitting}> Submit </Button>\n      </Form>\n      )}\n    </Formik>\n  </div>\n);\n\n}\n\n\n\nexport default SignUp","import React from 'react';\nimport { auth } from \"../firebase\"\n\nimport { Formik, Field, Form } from 'formik';\nimport { Button, Typography, Box, makeStyles } from '@material-ui/core'\nimport { TextField } from 'formik-material-ui';\n\n\nconst useStyles = makeStyles((theme) => ({\n  \n  root: {\n    width: \"30ch\"\n  }\n\n}))\n\n \nfunction LogIn(props) {\n\n  const classes = useStyles()\n\n\n  const logIn = (formData) => {\n\n    auth.signInWithEmailAndPassword(formData.email, formData.password)\n    .catch((error) => alert(error.message))\n\n    props.setPage(\"home\")\n    \n}\n\n  const signupstyle = {\n  backgroundColor: \"#FAEBD7\"\n}\n\n  return (\n\n    <div style={signupstyle}>\n    <Typography variant=\"h2\" color=\"secondary\"> Log In: </Typography>\n    <Formik\n      initialValues = {{ \n        email: \"\", \n        password: \"\"\n    }}\n\n      validate = {values => {\n        const errors = {};\n        if (!values.email) {\n          errors.email = 'Required';\n        } \n\n        if (!values.password) {\n          errors.password = \"Required\"\n\n        return errors\n      }}\n      }\n\n      onSubmit = {(values, { setSubmitting }) => {\n        setTimeout(() => {\n          logIn(values)\n          setSubmitting(false)\n        }, 400);\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        /* and other goodies */\n      }) => (\n      \n      <Form onSubmit={handleSubmit}>\n      <br/>\n        <Box margin={5}>\n          <Field\n            component={TextField}\n            className={classes.root}\n            type=\"email\"\n            label=\"Email\"\n            name=\"email\"\n          />\n        </Box>\n        {errors.email && touched.email}\n        <br/>\n        <Box margin={5}>\n          <Field\n            component={TextField}\n            className={classes.root}\n            type=\"password\"\n            label=\"Password\"\n            name=\"password\"\n          />\n        </Box>\n        <br/>\n        {errors.password && touched.password}\n        <Button type=\"submit\" color=\"secondary\" variant=\"outlined\" disabled={isSubmitting}> Submit </Button>\n      </Form>\n      )}\n    </Formik>\n  </div>\n);\n\n}\n\n\n\nexport default LogIn","import React, { useEffect, useState } from \"react\"\nimport { db } from \"../firebase\"\n\nimport { Typography } from '@material-ui/core'\n\n\n\nfunction QuoteDay(props) {\n\n  const [quote, setQuote] = useState(\"\")\n\n  useEffect(() => {\n\n  db.collection(\"quotes\").onSnapshot(snapshot => {\n\n        let quotes = snapshot.docs.map(doc => doc.data())\n        let todaysNum = props.random % quotes.length\n\n        setQuote(quotes[todaysNum])\n\n    })\n\n  }, [props.random])\n\n  const quotestyle = {\n    backgroundColor: \"#FAEBD7\",\n    border: \"4px solid red\"\n  }\n\n  return (\n    <div style={quotestyle}>\n      <Typography variant=\"h4\" color=\"secondary\" align=\"center\"> Quote of the Day: </Typography>\n      <br/>\n      <Typography variant=\"h3\" color=\"secondary\" align=\"center\"> {quote.quote} </Typography>\n    </div>\n  )\n}\n\nexport default QuoteDay","import React, { useState } from 'react';\nimport { db, storage } from \"../firebase\"\nimport firebase from \"firebase\"\n\nimport { Formik, Form } from 'formik';\nimport { Button, Typography, TextField, Input, CircularProgress, makeStyles } from '@material-ui/core'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(1)\n  },\n  error: {\n    margin: theme.spacing(3),\n    color: \"red\"\n  },\n  image: {\n    margin: theme.spacing(3),\n    width: '40ch'\n  },\n  description: {\n    margin: theme.spacing(3),\n    width: '75ch'\n  }\n}))\n \nfunction Post(props) {\n\n  const [progress, setProgress] = useState(0)\n  const classes = useStyles()\n\n  const handleUpload = (formData) => {\n\n    const uploadTask = storage.ref(\"images/\" + formData.image.name + \"-\" + props.uid).put(formData.image)\n\n      uploadTask.on(\"state_changed\", (snapshot) => {\n        const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100)\n        setProgress(progress)\n      },\n      (error) => {\n        alert(error.message)\n      },\n      () => {\n        storage.ref(\"images\").child(formData.image.name + \"-\" + props.uid).getDownloadURL().then(url => {\n          db.collection(\"posts\").add({\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n            imageUrl: url,\n            treeId: props.treeId,\n            description: formData.description,\n            psudeoId: Math.random().toString(36),\n            postedBy: props.postedBy,\n          })\n        })\n      })\n\n  }\n\n\n  return (\n\n    <div>\n    <Formik\n      initialValues = {{ \n        description: \"\",\n        image: null\n    }}\n\n    validate = {values => {\n      const errors = {}\n\n      if (!values.image) {\n          errors.image = \"Upload an image of your tree to post\"\n        }\n      \n\n      return errors\n    }}\n\n\n      onSubmit = {(values, { setSubmitting, resetForm }) => {\n        setTimeout(() => {\n          handleUpload(values)\n          setSubmitting(false)\n          resetForm({})\n        }, 400);\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue\n        /* and other goodies */\n      }) => (\n      <Form onSubmit={handleSubmit} autoComplete=\"off\" className={classes.root} >\n      <br/>\n      <Typography variant=\"h3\" color=\"secondary\"> Post on Tree: </Typography>\n      \n\n      <br/>\n\n      <div>\n        <br/>\n        <Typography variant=\"h5\" color=\"secondary\"> Picture of Tree: </Typography>\n        <Input className={classes.image} id=\"image\" name=\"image\" type=\"file\"\n          onChange={(event) => {\n            setFieldValue(\"image\", event.target.files[0])\n          }} />\n          <CircularProgress variant=\"static\" value={progress} />\n\n      </div>\n      \n      <br/>\n\n      <Typography variant=\"h5\" color=\"secondary\"> Enter a Description: </Typography>\n\n      <TextField\n          label=\"Description\"\n          name=\"description\"\n          multiline\n          className={classes.description}\n          rows={8}\n          variant=\"outlined\"\n          onChange={handleChange}\n        />\n\n      <Typography className={classes.error}> {errors.image} </Typography>\n\n      <br/>\n\n      <Button type=\"submit\" color=\"secondary\" variant=\"outlined\" disabled={isSubmitting}> Submit </Button>\n\n      </Form>\n\n      \n\n      \n\n      )}\n    </Formik>\n  </div>\n)\n\n}\n\n\n\nexport default Post\n\n/*import React, { useState } from \"react\"\n\nimport firebase from \"firebase\"\nimport { db, storage } from \"../firebase\"\n\nfunction Post(props) {\n\n  const [progress, setProgress] = useState(0)\n  const [image, setImage] = useState(null)\n  const [description, setDescription] = useState(\"\")\n\n  const handleChange = (e) => {\n    if(e.target.files[0]) {\n      setImage(e.target.files[0])\n    }\n  }\n\n  const handlePost = () => {\n    if (image) {\n      const uploadTask = storage.ref(\"images/\" + image.name).put(image)\n\n      uploadTask.on(\"state_changed\", (snapshot) => {\n        const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100)\n        setProgress(progress)\n      },\n      (error) => {\n        alert(error.message)\n      },\n      () => {\n        storage.ref(\"images\").child(image.name).getDownloadURL().then(url => {\n\n          db.collection(\"posts\").add({\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n            imageUrl: url,\n            treeId: props.treeId,\n            description: description,\n            psudeoId: Math.random().toString(36),\n            postedBy: props.postedBy,\n            comments: []\n          })\n\n        })\n          setProgress(0)\n          setImage(null)\n          setDescription(\"\")\n      }\n      )\n    }\n    else {\n      alert(\"Please provide an image.\")\n    }\n\n  }\n\n  const criptstyle = {\n        color: \"white\",\n        backgroundColor: \"black\",\n        padding: \"10px\",\n        height: \"100px\",\n        width: \"500px\",\n        fontFamily: \"Arial\",\n        textAlign: \"left\"\n\n      }\n\n    return (\n      <div>\n        <textarea style={criptstyle} placeholder=\"Enter a description...\" onChange={event => setDescription(event.target.value)} value={description}></textarea>\n        <br/>\n        <progress value={progress} max=\"100\" />\n        <input type=\"file\" onChange={handleChange}/>\n        <button onClick={handlePost}> Upload </button>\n      </div>\n    )\n  \n\n\n\n    \n}\n\nexport default Post*/","import React, { useEffect, useState } from \"react\"\n\nimport { db } from \"../firebase\"\n\nimport { Typography, makeStyles } from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(1)\n  },\n  comment: {\n    backgroundColor: \"#4fc3f7\"\n  },\n}))\n\nfunction PostDisplay(props) {\n\n    const [comments, setComments] = useState([])\n\n    const classes = useStyles()\n\n    let date = \"\"\n    let time = \"\"\n    \n    if (props.post.timestamp) {\n      date = props.post.timestamp.toDate().toLocaleDateString()\n      time = props.post.timestamp.toDate().toLocaleTimeString()\n    } \n\n    useEffect(() => {\n\n    const unsubscribe = db.collection(\"comments\").orderBy(\"timestamp\", \"desc\").onSnapshot(snapshot => {\n      let incomingComments = []\n\n      snapshot.docs.forEach(doc => {\n        if(doc.data().postId === props.post.psudeoId) {\n          incomingComments.push(doc.data())\n        }\n      })\n\n      setComments(incomingComments)\n\n    })\n\n    return () => {\n      unsubscribe()\n    }\n\n   }, [props.post.psudeoId])\n\n   \n\n   const commentstyle = {\n      paddingLeft: \"10px\",\n      paddingRight: \"10px\",\n      border: \"5px solid blue\"\n   }\n\n    return (\n      <div className={classes.root}>\n        <div>\n          <hr/>\n          <img src={props.post.imageUrl} alt=\"\" height=\"400\" width=\"400\" /> \n          <Typography variant=\"h4\" color=\"secondary\" > {props.post.description} </Typography>\n          <Typography variant=\"h5\" color=\"secondary\"> Posted By: {props.post.postedBy} </Typography>\n          <Typography align=\"right\" variant=\"h5\" color=\"secondary\"> {date + \" @ \" + time} </Typography>\n          \n        </div>\n        <div style={commentstyle} className={classes.comment}>\n          {comments.length > 0 ? comments.map(comment => {\n\n            let commentDate = \"\"\n            let commentTime = \"\"\n            \n            if (comment.timestamp) {\n              commentDate = comment.timestamp.toDate().toLocaleDateString()\n              commentTime = comment.timestamp.toDate().toLocaleTimeString()\n            } \n\n            if (comment.imageUrl) {\n              return (\n                <div key={comment.psudeoId}>\n                  <hr/>\n                  \n                  <Typography variant=\"h6\" color=\"secondary\"> <b>{comment.postedBy}:</b> {comment.comment} </Typography>\n                  <img src={comment.imageUrl} alt=\"\" height=\"200\" width=\"200\" />\n                  <Typography align=\"right\" variant=\"h6\" color=\"secondary\"> {commentDate + \" @ \" + commentTime} </Typography>\n                  \n                </div>\n            )\n            }\n\n            else {\n              return (\n                <div key={comment.psudeoId}>\n                <hr/>\n                <Typography variant=\"h6\" color=\"secondary\"> <b>{comment.postedBy}:</b> {comment.comment} </Typography>\n                <Typography align=\"right\" variant=\"h6\" color=\"secondary\"> {commentDate + \" @ \" + commentTime} </Typography>\n                </div>\n              )\n            }\n            \n          }) :\n          <Typography variant=\"h5\" color=\"secondary\" align=\"center\"> No comments </Typography> }\n        </div>\n      </div>\n    )\n  }\n\n\nexport default PostDisplay","\nimport React, { useState } from 'react';\nimport { db, storage } from \"../firebase\"\nimport firebase from \"firebase\"\n\nimport { Formik, Form } from 'formik';\nimport { Button, Typography, TextField, Input, CircularProgress, makeStyles } from '@material-ui/core'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(1)\n  },\n  error: {\n    margin: theme.spacing(3),\n    color: \"red\"\n  },\n  image: {\n    margin: theme.spacing(3),\n    width: '25ch'\n  },\n  comment: {\n    margin: theme.spacing(3),\n    width: '60ch'\n  }\n}))\n \nfunction Comment(props) {\n\n  const [progress, setProgress] = useState(0)\n  const classes = useStyles()\n\n  const handleUpload = (formData) => {\n\n    if (formData.image) {\n\n      const uploadTask = storage.ref(\"images/\" + formData.image.name + \"-\" + props.uid).put(formData.image)\n\n            uploadTask.on(\"state_changed\", (snapshot) => {\n              const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100)\n              setProgress(progress)\n            },\n            (error) => {\n              alert(error.message)\n            },\n            () => {\n              storage.ref(\"images\").child(formData.image.name + \"-\" + props.uid).getDownloadURL().then(url => {\n                db.collection(\"comments\").add({\n                  imageUrl: url,\n                  timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                  postedBy: props.username,\n                  psudeoId: Math.random().toString(36),\n                  comment: formData.comment,\n                  postId: props.post.psudeoId\n                })\n              })\n            })\n\n    }\n\n    else {\n\n      db.collection(\"comments\").add({\n        imageUrl: null,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        postedBy: props.username,\n        psudeoId: Math.random().toString(36),\n        comment: formData.comment,\n        postId: props.post.psudeoId\n      })\n\n    }\n\n    \n\n  }\n\n\n  return (\n\n    <div>\n    <Formik\n      initialValues = {{ \n        comment: \"\",\n        image: null\n    }}\n\n    validate = {values => {\n      const errors = {}\n\n      if (!values.image && !values.comment) {\n          errors.image = \"Upload at least an image or a comment\"\n        }\n      \n\n      return errors\n    }}\n\n\n      onSubmit = {(values, { setSubmitting, resetForm }) => {\n        setTimeout(() => {\n          handleUpload(values)\n          setSubmitting(false)\n          resetForm({})\n        }, 400);\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue\n        /* and other goodies */\n      }) => (\n      <Form onSubmit={handleSubmit} autoComplete=\"off\" className={classes.root} >\n      <Typography variant=\"h4\" color=\"secondary\"> Comment: </Typography>\n      <br/>\n        <Typography variant=\"h5\" color=\"secondary\"> Enter a comment: </Typography>\n        <TextField\n            label=\"Comment\"\n            name=\"comment\"\n            multiline\n            className={classes.comment}\n            rows={3}\n            variant=\"outlined\"\n            onChange={handleChange}\n          />\n\n          <div>\n            <br/>\n            <Typography variant=\"h5\" color=\"secondary\"> Picture of Tree: </Typography>\n            <Input className={classes.image} id=\"image\" name=\"image\" type=\"file\"\n              onChange={(event) => {\n                setFieldValue(\"image\", event.target.files[0])\n              }} />\n              <CircularProgress variant=\"static\" value={progress} />\n          </div>\n\n      <Typography className={classes.error}> {errors.image} </Typography>\n\n      <Button type=\"submit\" color=\"secondary\" variant=\"outlined\" disabled={isSubmitting}> Comment </Button>\n\n      </Form>\n\n      )}\n    </Formik>\n  </div>\n)\n\n}\n\n\n\nexport default Comment\n\n","import React from \"react\"\nimport Post from \"./post\"\nimport PostDisplay from \"./postDisplay\"\nimport Comment from \"./comment\"\nimport { db } from \"../firebase\"\n\nimport { Typography } from \"@material-ui/core\"\n\nlet isMounted = false\n\nclass FullTreePage extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      posts: []\n    }\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  componentDidMount() {\n    isMounted = true\n    db.collection(\"posts\").orderBy(\"timestamp\", \"desc\").onSnapshot(snapshot => {\n      let incomingPosts = []\n\n      snapshot.docs.forEach(doc => {\n        if(doc.data().treeId === this.props.tree.psudeoId) {\n          incomingPosts.push(doc.data())\n        }\n      })\n\n      if (isMounted) {\n        this.setState({\n        posts: incomingPosts\n      })\n      }\n      \n    })\n  }\n\n  componentWillUnmount(){\n    isMounted = false\n  }\n\n\n  handleChange(event) {\n\n    const {name, value} = event.target\n\n    this.setState({[name]: value})\n  }\n\n\n\n\n  render() {\n\n    const treestyle = {\n        backgroundColor: \"#90EE90\",\n      }\n\n    const poststyle = {\n     border: \"5px solid brown\",\n   }\n\n    let posts = this.state.posts\n\n    return (\n      <div style={treestyle}>\n\n        <div>\n          {this.props.uid === this.props.tree.owner ? \n          <Post postedBy={this.props.username} treeId={this.props.tree.psudeoId} uid={this.props.uid} /> :\n          null \n          }\n        </div>\n\n        <div>\n          \n          <br/>\n          <hr/>\n            <Typography variant=\"h3\" color=\"secondary\" align=\"center\"> Posts: </Typography>\n          <hr/>\n          {posts.length > 0 ? posts.map(post => {\n            return <div key={post.psudeoId} style={poststyle}>\n            <PostDisplay post={post} />\n            <Comment username={this.props.username} post={post} />\n            </div>\n          }) :\n            <Typography variant=\"h4\" color=\"secondary\"> No Posts on Tree </Typography>}\n\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default FullTreePage","import React from \"react\"\nimport FullTreePage from \"./fullTreePage\"\nimport { db } from \"../firebase\"\n\nimport { Button, Typography } from \"@material-ui/core\"\n\nlet isMounted = false\n\nclass PublicTree extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      fullPage: false,\n      tree: null\n    }\n    this.updateOwner = this.updateOwner.bind(this)\n    \n  }\n\n  componentDidMount() {\n    isMounted = true\n    db.collection(\"publicTrees\").onSnapshot(snapshot => {\n      let thisTree = null\n\n      snapshot.docs.forEach(doc => {\n        if(doc.data().psudeoId === this.props.psudeoId) {\n          thisTree = doc.data()\n        }\n      })\n      \n      if (isMounted) {\n        this.setState({\n          tree: thisTree\n      })\n      }\n      \n    })\n  }\n\n  componentWillUnmount(){\n    isMounted = false\n  }\n\n  updateOwner = (owner) => {\n    db.collection(\"publicTrees\").where(\"psudeoId\", \"==\", this.props.psudeoId)\n      .get()\n      .then((querySnapshot) => {\n          querySnapshot.forEach((doc) => {\n              db.collection(\"publicTrees\").doc(doc.id).update({\n                owner: owner,\n              })\n          })\n      })\n      .catch(function(error) {\n          console.log(\"Error getting documents: \", error)\n      })\n\n  }\n\n\n\n  render() {\n\n    const treestyle = {\n        backgroundColor: \"#90EE90\",\n        textAlign: \"left\",\n        paddingLeft: \"20px\",\n        paddingRight: \"20px\",\n        border: \"5px solid purple\"\n\n      }\n\n      if (this.state.fullPage) {\n        return (\n          <div style={treestyle}>\n            <FullTreePage uid={this.props.uid} username={this.props.username} tree={this.state.tree}/>\n            <hr/>\n            <Button variant=\"outlined\" color=\"secondary\" onClick={() => this.setState({fullPage: false})}> Close Posts </Button>\n          </div>\n        )\n\n      }\n\n      else {\n\n        let tree = this.state.tree\n\n        if(tree) {\n\n          if (this.props.username) {\n\n            let date = \"\"\n            let time = \"\"\n            \n            if (tree.timestamp) {\n              date = tree.timestamp.toDate().toLocaleDateString()\n              time = tree.timestamp.toDate().toLocaleTimeString()\n            } \n\n            return (\n              <div style={treestyle}>\n                <Typography variant=\"h2\" color=\"secondary\">{tree.name}</Typography>\n                <Button variant=\"outlined\" color=\"secondary\" onClick={() => this.setState({fullPage: true})}> View Posts </Button>\n                \n                {tree.owner ? \n                  null :\n                  <Button variant=\"outlined\" color=\"secondary\" onClick={() => this.updateOwner(this.props.uid)}> Adopt Tree </Button>}\n\n                {tree.owner === this.props.uid ? \n                  <Button variant=\"outlined\" color=\"secondary\" onClick={() => this.updateOwner(null)}> Release from Care </Button> :\n                  null}\n\n                <div>\n                <br/>\n                <img src={tree.imageUrl} alt=\"\" height={this.props.height} width={this.props.width} />\n                <Typography variant=\"h4\" color=\"secondary\"> {tree.description} </Typography>\n                </div>\n\n                <Typography variant=\"h5\" color=\"secondary\"> Posted by: {tree.postedBy} </Typography>\n                <Typography variant=\"h5\" color=\"secondary\" align=\"right\"> {date + \" \" + time} </Typography>\n              </div>\n          \n        )\n\n          }\n\n          else {\n\n            return (\n              <div style={treestyle}>\n                <hr/>\n                <Typography variant=\"h2\" color=\"secondary\">{tree.name}</Typography>\n                <Button variant=\"outlined\" color=\"secondary\" onClick={() => this.setState({fullPage: true})}> View Full Page </Button>\n                \n                <div>\n                <br/>\n                <img src={tree.imageUrl} alt=\"\" height={this.props.height} width={this.props.width} />\n                <Typography variant=\"h4\" color=\"secondary\"> {tree.description} </Typography>\n                </div>\n\n                <Typography variant=\"h5\" color=\"secondary\"> Posted by: {tree.postedBy} </Typography>\n                <Typography variant=\"h5\" color=\"secondary\"> {tree.time} </Typography>\n                <hr/>\n              </div>\n          \n        )\n\n          }\n\n          \n          \n        }\n\n        else{\n\n          return (\n            <Typography variant=\"h3\" color=\"secondary\"> Loading Tree... If you are able to read through this entire message then something went wrong </Typography>\n          )\n          \n        }\n\n        \n      }\n\n      \n    \n  }\n}\n\nexport default PublicTree","import React, { useEffect, useState } from \"react\"\nimport PublicTree from \"../Profile/publicTree\"\nimport { db } from \"../firebase\"\n\nfunction TreeDay(props) {\n\n  const [tree, setTree] = useState(null)\n\n  useEffect(() => {\n\n  const unsubscribe = db.collection(\"publicTrees\").onSnapshot(snapshot => {\n\n        let trees = snapshot.docs.map(doc => doc.data())\n        let todaysNum = props.random % trees.length\n \n        setTree(trees[todaysNum])\n\n    })\n\n    return () => {\n      unsubscribe()\n    }\n\n  }, [props.random])\n\n\n  return (\n    <div>\n      {tree ? \n      <PublicTree uid={props.uid} username={props.username} psudeoId={tree.psudeoId} height=\"300\" width=\"300\" /> :\n      null}\n    </div>\n  )\n}\n\nexport default TreeDay","import React, { useState, useEffect } from \"react\"\nimport QuoteDay from \"./quoteDay\"\nimport TreeDay from \"./treeDay\"\nimport star from \"../images/star.png\"\n\nimport { Typography, Grid, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles({\n \n  treeofday: {\n    display: \"inline\"\n  }\n\n})\n\nfunction Home(props) {\n\n    const [dateNum, setDateNum] = useState(null)\n\n    const classes = useStyles()\n\n    useEffect(() => {\n    \n      var dateObj = new Date()\n      var month = dateObj.getMonth() + 1\n      var day = dateObj.getDate()\n      var year = dateObj.getFullYear()\n\n      setDateNum(year + month + day)\n\n    }, [])\n\n    const treeofthedaystyle = {\n      border: \"4px solid green\",\n      backgroundColor: \"#90EE90\",\n      textAlign: \"center\"\n    }\n\n    const messagestyle = {\n      backgroundColor: \"#F0E68C\",\n      border: \"4px solid blue\",\n      paddingLeft: \"10px\",\n      paddingRight: \"10px\"\n    }\n\n    if (props.loggedIn) {\n\n      return (\n      <div>\n      <br/>\n        {dateNum ? \n        <QuoteDay random={dateNum}/> :\n        null\n        }\n        <hr/>\n        {dateNum ?\n          <Grid container spacing={1}>\n          <Grid item xs={5}>\n            <div style={messagestyle}>\n              <Typography variant=\"h5\" color=\"secondary\" align=\"left\"> Welcome to Public Tree! </Typography>\n              <br/>\n              <Typography variant=\"h5\" color=\"secondary\" align=\"left\"> Our goal is to provide people with a vehicle to adopt and care for public trees in their communities. </Typography>\n              <br/>\n              <Typography variant=\"h5\" color=\"secondary\" align=\"left\"> Take a look around. Upload a tree in your community that needs care. Adopt a tree that you wish to help. </Typography>\n              <br/>\n              <Typography variant=\"h5\" color=\"secondary\" align=\"left\"> Plant a public tree and document its life. </Typography>\n              <br/>\n              <Typography variant=\"h5\" color=\"secondary\" align=\"left\"> Make sure your images are static. (.jpeg / .png) </Typography>\n              <br/>\n              <Typography variant=\"h5\" color=\"secondary\" align=\"left\"> Check back often. Make suggestions. We want to make this as user friendly as possible. </Typography>\n              <br/>\n              <Typography variant=\"h5\" color=\"secondary\" align=\"left\"> Peace, </Typography>\n              <br/>\n              <Typography variant=\"h5\" color=\"secondary\" align=\"left\"> Public Tree </Typography>\n            </div>\n          </Grid>\n          <Grid item xs={7}>\n          <div style={treeofthedaystyle}>\n            <img src={star} alt=\"\" height=\"50\" width=\"50\" />\n            <Typography className={classes.treeofday} variant=\"h3\" color=\"secondary\"> Tree Spotlight </Typography>\n            <img src={star} alt=\"\" height=\"50\" width=\"50\" />\n          </div>\n            <TreeDay uid={props.uid} username={props.username} random={dateNum} />\n          </Grid>\n        </Grid> :\n        null }\n        \n      </div>\n    )\n\n    }\n\n    else {\n\n      return (\n      <div>\n      <br/>\n        {dateNum ? \n        <QuoteDay random={dateNum}/> :\n        null\n        }\n        <hr/>\n          <div style={messagestyle}>\n            <Typography variant=\"h5\" color=\"secondary\" align=\"left\"> Welcome to Public Tree! </Typography>\n            <br/>\n            <Typography variant=\"h5\" color=\"secondary\" align=\"left\"> Our goal is to provide people with a vehicle to adopt and care for public trees in their communities. </Typography>\n            <br/>\n            <Typography variant=\"h5\" color=\"secondary\" align=\"left\"> Take a look around. Upload a tree in your community that needs care. Adopt a tree that you wish to help. </Typography>\n            <br/>\n            <Typography variant=\"h5\" color=\"secondary\" align=\"left\"> Plant a public tree and document its life. </Typography>\n            <br/>\n            <Typography variant=\"h5\" color=\"secondary\" align=\"left\"> Check back often. Make suggestions. We want to make this as user friendly as possible. </Typography>\n            <br/>\n            <Typography variant=\"h5\" color=\"secondary\" align=\"left\"> Sign up to gain access to the site. </Typography>\n            <br/>\n            <Typography variant=\"h5\" color=\"secondary\" align=\"left\"> Peace, </Typography>\n            <br/>\n            <Typography variant=\"h5\" color=\"secondary\" align=\"left\"> Public Tree </Typography>\n          </div>\n        \n      </div>\n    )\n\n    }\n    \n  }\n\nexport default Home","import React, { useState } from 'react';\nimport { db } from \"../firebase\"\n\nimport firebase from \"firebase\"\n\nimport { Formik, Form } from 'formik';\nimport { Button, Typography, Box, TextField, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  confirm: {\n    color: \"green\"\n  },\n  error: {\n    color: \"red\"\n  },\n  email: {\n    margin: theme.spacing(1),\n    width: \"30ch\"\n  },\n  message: {\n    margin: theme.spacing(1),\n    width: '75ch'\n  }\n}))\n\n \nfunction Feedback(props) {\n\n  const classes = useStyles()\n  const [confirm, setConfirm] = useState(\"\")\n\n  const feedback = (formData) => {\n\n    db.collection(\"feedback\").add({\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n            username: props.username,\n            email: formData.email,\n            message: formData.message\n          })\n    \n}\n\n  const signupstyle = {\n  backgroundColor: \"#FAEBD7\",\n  paddingLeft: \"10px\"\n}\n\n  return (\n\n    <div style={signupstyle}>\n    <Typography variant=\"h3\" color=\"secondary\"> Feedback: </Typography>\n    <Formik\n      initialValues = {{  \n        email: \"\", \n        message: \"\"\n    }}\n\n      validate = {values => {\n        const errors = {};\n\n        if (!values.message) {\n          errors.message = \"Please enter a message\"\n        }\n\n        setConfirm(\"\")\n\n        return errors\n      }}\n\n      onSubmit = {(values, { setSubmitting, resetForm }) => {\n        setTimeout(() => {\n          feedback(values)\n          setSubmitting(false)\n          resetForm({})\n          setConfirm(\"Feedback recieved, thank you.\")\n\n        }, 400);\n      }}\n    >\n      {({\n        values,\n        errors,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        /* and other goodies */\n      }) => (\n      <Form onSubmit={handleSubmit} autoComplete=\"off\">\n        \n        <Box margin={7}>\n          <TextField\n            className={classes.message}\n            multiline\n            rows={4}\n            variant=\"outlined\"\n            type=\"text\"\n            label=\"Message\"\n            name=\"message\"\n            onChange={handleChange}\n          />\n        </Box>\n\n        <Box margin={7}>\n          <TextField\n            className={classes.email}\n            type=\"text\"\n            label=\"Return Email (Optional)\"\n            name=\"email\"\n            onChange={handleChange}\n          />\n        </Box>\n\n        <Typography className={classes.error} > {errors.message} </Typography>\n        <Typography className={classes.confirm} > {confirm} </Typography>\n        <br/>\n       \n        <Button type=\"submit\" color=\"secondary\" variant=\"outlined\" disabled={isSubmitting}> Send </Button>\n      </Form>\n      )}\n    </Formik>\n  </div>\n);\n\n}\n\n\n\nexport default Feedback","import React from \"react\"\n\n\nclass UploadMarker extends React.Component {\n\n  render() {\n\n      return (\n      <div>\n        <img src={this.props.imageUrl} alt=\"\" height=\"50\" width=\"50\" />\n      </div>\n      )\n    \n    \n  }\n}\n\nexport default UploadMarker\n","import React, { useState, useEffect } from 'react';\nimport { db, storage } from \"../firebase\"\nimport firebase from \"firebase\"\n\nimport GoogleMapReact from 'google-map-react';\nimport UploadMarker from \"./uploadMarker\"\nimport treeImg from \"../images/tree.png\"\n\n\nimport { Formik, Form } from 'formik';\nimport { Button, Typography, TextField, Input, CircularProgress, Box, makeStyles } from '@material-ui/core'\n\nconst Marker = () => <div><img src={treeImg} alt=\"\" height=\"50\" width=\"50\" /></div>;\n\nconst useStyles = makeStyles((theme) => ({\n  confirm: {\n    color: \"green\"\n  },\n  error: {\n    color: \"red\"\n  },\n  name: {\n    margin: theme.spacing(1),\n    width: '40ch'\n  },\n  description: {\n    margin: theme.spacing(1),\n    width: '75ch'\n  }\n}))\n \nfunction UploadTreeForm(props) {\n\n  const [progress, setProgress] = useState(0)\n  const [displayTrees, setDisplayTrees] = useState([])\n  const [confirm, setConfirm] = useState(\"\")\n\n  const classes = useStyles()\n\n  const handleUpload = (formData) => {\n\n    const uploadTask = storage.ref(\"images/\" + formData.image.name + \"-\" + props.uid).put(formData.image)\n\n      uploadTask.on(\"state_changed\", (snapshot) => {\n        const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100)\n        setProgress(progress)\n      },\n      (error) => {\n        alert(error.message)\n      },\n      () => {\n        storage.ref(\"images\").child(formData.image.name + \"-\" + props.uid).getDownloadURL().then(url => {\n          db.collection(\"publicTrees\").add({\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n            imageUrl: url,\n            psudeoId: Math.random().toString(36),\n            description: formData.description,\n            latitude: formData.lat,\n            longitude: formData.lng,\n            name: formData.name,\n            owner: props.uid,\n            postedBy: props.username\n          })\n        })\n      })\n\n  }\n\n  useEffect(() => {\n\n  const unsubscribe = db.collection(\"publicTrees\").onSnapshot(snapshot => {\n        setDisplayTrees(snapshot.docs.map(doc => doc.data()))\n\n    })\n\n    return () => {\n      unsubscribe()\n    }\n\n  }, [])\n\n\n  return (\n\n    <div>\n    <Typography variant=\"h2\" color=\"secondary\"> Upload a Tree: </Typography>\n    <Formik\n      initialValues = {{ \n        name: \"\",\n        description: \"\",\n        lat: 0,\n        lng: 0,\n        image: null\n    }}\n\n    validate = {values => {\n      const errors = {}\n\n      if (!values.name) {\n          errors.name = \"Tree name required\"\n        }\n\n      if (!values.description) {\n          errors.description = \"Please enter a description for the tree\"\n        }\n\n      if (!values.image) {\n          errors.image = \"Upload an image for your tree\"\n        }\n        \n      if (values.lat === 0 && values.lng === 0) {\n          errors.lat = \"Locate your tree on the Google Map above\"\n        }\n      \n      setConfirm(\"\")\n      \n      return errors\n    }}\n\n\n      onSubmit = {(values, { setSubmitting, resetForm }) => {\n        setTimeout(() => {\n          handleUpload(values)\n          setSubmitting(false)\n          resetForm({})\n          setConfirm(\"Tree upload success.\")\n\n        }, 400);\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue\n        /* and other goodies */\n      }) => (\n      <Form onSubmit={handleSubmit} autoComplete=\"off\" >\n      <br/>\n      <Typography variant=\"h5\" color=\"secondary\"> Name the Tree: </Typography>\n\n      <Box margin={3}>\n          <TextField\n          label=\"Name\"\n          name=\"name\"\n          className={classes.name}\n          onChange={handleChange}\n        />\n      </Box>\n      \n      <br/>\n      <br/>\n      \n      <Typography variant=\"h5\" color=\"secondary\"> Enter a Description: </Typography>\n\n      <Box margin = {3}>\n      <TextField\n          label=\"Description\"\n          name=\"description\"\n          multiline\n          className={classes.description}\n          rows={8}\n          variant=\"outlined\"\n          onChange={handleChange}\n        />\n      </Box>\n\n      <div style={{ height: \"100vh\", width: \"100%\" }}>\n        <br/>\n        <Typography variant=\"h5\" color=\"secondary\"> Locate: </Typography>\n        <br/>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: \"AIzaSyBiB3iNngJM_kFWKxSv9a30O3fww7YTiWA\"}}\n          center={{lat : 47.7511, lng : -120.7401}}\n          zoom={6}\n          onClick={(event) => {\n\n            setFieldValue(\"lat\", event.lat)\n            setFieldValue(\"lng\", event.lng)\n            \n          }}\n        >\n\n      {displayTrees.length > 0 ? displayTrees.map(tree => {\n        return <UploadMarker key={tree.psudeoId} lat={tree.latitude} lng={tree.longitude} imageUrl={tree.imageUrl} />\n      }) :  null }\n\n       <Marker\n            lat={values.lat}\n            lng={values.lng}\n          />\n\n        \n          \n        </GoogleMapReact>\n    </div>\n\n        \n      <div>\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        <Typography variant=\"h5\" color=\"secondary\"> Picture of Tree: </Typography>\n        <Input id=\"image\" name=\"image\" type=\"file\"\n          onChange={(event) => {\n            setFieldValue(\"image\", event.target.files[0])\n          }} />\n          <CircularProgress variant=\"static\" value={progress} />\n\n          <br/>\n\n      </div>\n\n      <br/>\n\n      <Typography className={classes.error}> {errors.name} </Typography>\n      <Typography className={classes.error}> {errors.description} </Typography>\n      <Typography className={classes.error}> {errors.lat} </Typography>\n      <Typography className={classes.error}> {errors.image} </Typography>\n      <Typography className={classes.confirm}> {confirm} </Typography>\n\n      <br/>\n\n      <Button type=\"submit\" color=\"secondary\" variant=\"outlined\" disabled={isSubmitting}> Submit </Button>\n\n      \n\n      </Form>\n\n      \n\n      )}\n    </Formik>\n  </div>\n)\n\n}\n\n\n\nexport default UploadTreeForm","import React from \"react\"\n\nclass AdoptMarker extends React.Component {\n\n  render() {\n\n    let adoptstyle\n\n    if (this.props.tree.owner === this.props.uid) {\n      adoptstyle = {\n        color: \"white\",\n        backgroundColor: \"blue\",\n        textAlign: \"center\"\n      }\n    }\n      \n    else if (this.props.tree.owner) {\n      adoptstyle = {\n        color: \"white\",\n        backgroundColor: \"green\",\n        textAlign: \"center\"\n      }\n    }\n    else {\n      adoptstyle = {\n        color: \"brown\",\n        backgroundColor: \"yellow\",\n        textAlign: \"center\"\n      }\n    }\n\n    return (\n      <div>\n        <img src={this.props.tree.imageUrl} alt=\"\" height=\"50\" width=\"50\" />\n        <button style={adoptstyle} onClick={() => this.props.function(this.props.tree)}> View Tree </button>\n      </div>\n    )\n    \n    \n  }\n}\n\nexport default AdoptMarker\n","import React from 'react'\nimport GoogleMapReact from 'google-map-react'\nimport { db } from \"../firebase\"\nimport AdoptMarker from \"./adoptMarker\"\nimport PublicTree from \"../Profile/publicTree\"\n\nimport { Button, Typography, Grid } from \"@material-ui/core\"\n\nlet isMounted = true\n\nclass AdoptMap extends React.Component {\n\n   constructor() {\n    super()\n    this.state = {\n      publicTrees: [],\n      tree: null\n    }\n    this.setTree = this.setTree.bind(this)\n  }\n\n  setTree(tree) {\n    this.setState({\n      tree: tree\n      })\n  }\n\n\n  componentDidMount() {\n    isMounted = true\n    db.collection(\"publicTrees\").onSnapshot(snapshot => {\n      if(isMounted) {\n        this.setState({publicTrees: snapshot.docs.map(doc => doc.data())})\n      }\n    })\n  }\n\n  componentWillUnmount(){\n    isMounted = false\n  }\n\n\n  render() {\n\n    var displayTrees = this.state.publicTrees\n\n    if(this.state.tree) {\n      return (\n        <div>\n          <PublicTree uid={this.props.uid} username={this.props.username} psudeoId={this.state.tree.psudeoId} height=\"500\" width=\"500\" />\n          <br/>\n          <Button variant=\"outlined\" color=\"secondary\" onClick={() => this.setTree(null)}> Return to Map </Button>\n        </div>\n      )\n\n    }\n\n    else {\n\n      let ownstyle = {\n        color: \"white\",\n        backgroundColor: \"blue\",\n        textAlign: \"center\"\n      }\n\n      let ownedstyle = {\n        color: \"white\",\n        backgroundColor: \"green\",\n        textAlign: \"center\"\n      }\n\n      let notownedstyle = {\n        color: \"brown\",\n        backgroundColor: \"yellow\",\n        textAlign: \"center\"\n      }\n\n      return (\n        <div>\n          <Grid container spacing={3}>\n            <Grid item xs={4}>\n              <Typography style={ownedstyle} variant=\"h4\"> Owned </Typography>\n            </Grid>\n            <Grid item xs={4}>\n              <Typography style={ownstyle} variant=\"h4\"> Owned by You </Typography>\n            </Grid>\n            <Grid item xs={4}>\n              <Typography style={notownedstyle} variant=\"h4\"> Needs Adoption </Typography>\n            </Grid>\n          </Grid>\n          <div style={{ height: \"100vh\",  width: \"100%\" }}>\n            <GoogleMapReact\n              bootstrapURLKeys={{ key: \"AIzaSyBiB3iNngJM_kFWKxSv9a30O3fww7YTiWA\"}}\n              center={{lat : 47.7511, lng : -120.7401}}\n              zoom={6}\n            >\n          {displayTrees.length > 0 ? displayTrees.map(tree => {\n            return <AdoptMarker key={tree.psudeoId} uid={this.props.uid} lat={tree.latitude} lng={tree.longitude} function={this.setTree} tree={tree} />\n          }) :  null }\n            \n            </GoogleMapReact>\n          </div>\n        </div>\n    )\n    }\n    \n    \n  }\n}\n\nexport default AdoptMap;","import React, { useState } from 'react';\nimport { db, storage } from \"../firebase\"\n\nimport { Formik, Form } from 'formik';\nimport { Button, Typography, TextField, Input, CircularProgress, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  \n  root: {\n      margin: theme.spacing(1),\n      width: '75ch'\n  }\n}))\n \nfunction EditProfile(props) {\n\n  const [progress, setProgress] = useState(0)\n  const classes = useStyles()\n\n  const handleUpload = (formData) => {\n\n    if (formData.image) {\n      const uploadTask = storage.ref(\"images/\" + formData.image.name + \"-\" + props.uid).put(formData.image)\n\n      uploadTask.on(\"state_changed\", (snapshot) => {\n        const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100)\n        setProgress(progress)\n      },\n      (error) => {\n        alert(error.message)\n      },\n      () => {\n        storage.ref(\"images\").child(formData.image.name + \"-\" + props.uid).getDownloadURL().then(url => {\n          db.collection(\"profiles\").where(\"uid\", \"==\", props.uid)\n          .get()\n          .then((querySnapshot) => {\n              querySnapshot.forEach((doc) => {\n                  db.collection(\"profiles\").doc(doc.id).update({\n                    imageUrl: url,\n                    bio: formData.bio\n                  })\n              })\n\n          })\n          .catch(function(error) {\n              console.log(\"Error getting documents: \", error)\n          })\n              })\n\n            }\n        )\n    }\n    else {\n      db.collection(\"profiles\").where(\"uid\", \"==\", props.uid)\n          .get()\n          .then((querySnapshot) => {\n              querySnapshot.forEach((doc) => {\n                  console.log(doc.id, \" => \", doc.data())\n                  db.collection(\"profiles\").doc(doc.id).update({\n                    bio: formData.bio\n                  })\n              })\n\n          })\n          .catch(function(error) {\n              console.log(\"Error getting documents: \", error)\n          })\n\n    }\n  }\n\n\n\n\n  return (\n\n    <div>\n    <Typography variant=\"h2\" color=\"secondary\"> Edit Profile: </Typography>\n    <Formik\n      initialValues = {{ \n        bio: props.bio,\n        image: null\n    }}\n\n    validate = {values => {\n        const errors = {}\n\n      return errors\n    }}\n\n\n      onSubmit = {(values, { setSubmitting }) => {\n        setTimeout(() => {\n          handleUpload(values)\n          setSubmitting(false)\n        }, 400);\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue\n        /* and other goodies */\n      }) => (\n      <Form onSubmit={handleSubmit} className={classes.root} noValidate autoComplete=\"off\" >\n      <Typography variant=\"h5\" color=\"secondary\"> Biography: </Typography>\n\n      <TextField\n          label=\"Biography\"\n          name=\"bio\"\n          defaultValue={props.bio}\n          multiline\n          className={classes.root}\n          rows={8}\n          variant=\"outlined\"\n          onChange={handleChange}\n        />\n\n        \n      <div>\n        <br/>\n        <br/>\n        <Typography variant=\"h5\" color=\"secondary\"> Profile Picture: </Typography>\n        <Input id=\"image\" name=\"image\" type=\"file\"\n          onChange={(event) => {\n            setFieldValue(\"image\", event.target.files[0]);\n          }} />\n          <CircularProgress variant=\"static\" value={progress} />\n\n          <br/>\n          <br/>\n\n      </div>\n\n\n      <Button type=\"submit\" color=\"secondary\" variant=\"outlined\" disabled={isSubmitting}> Submit </Button>\n\n      </Form>\n\n      )}\n    </Formik>\n  </div>\n)\n\n}\n\n\n\nexport default EditProfile","import React from \"react\"\nimport PublicTree from \"./publicTree\"\nimport { db } from \"../firebase\"\n\nimport { Typography } from '@material-ui/core'\n\n\n\nclass MyTrees extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      myTrees: []\n    }\n  }\n\n  componentDidMount() {\n    db.collection(\"publicTrees\").where(\"owner\", \"==\", this.props.uid)\n    .get()\n    .then((querySnapshot) => {\n        let myTrees = []\n        querySnapshot.forEach((doc) => {\n            myTrees.push(doc.data())\n        })\n        this.setState({\n              myTrees: myTrees\n            })\n\n    })\n    .catch(function(error) {\n        console.log(\"Error getting documents: \", error)\n    })\n  }\n\n\n  render() {\n\n    let myTrees = this.state.myTrees\n\n       return (\n      <div>\n        {myTrees.length > 0 ? myTrees.map(tree => {\n          return (\n            <div key={tree.psudeoId}>\n            <PublicTree uid={this.props.uid} key={tree.psudeoId} username={this.props.username} psudeoId={tree.psudeoId} height=\"300\" width=\"300\" />,\n            <hr/>\n          </div>\n          )\n          \n        }) :\n        <Typography variant=\"h5\" color=\"secondary\"> No Trees </Typography>}\n      </div>\n    )\n}\n  \n}\n\nexport default MyTrees","import React from \"react\"\nimport EditProfile from \"./editProfile\"\nimport MyTrees from \"./myTrees\"\nimport { db } from \"../firebase\"\n\nimport { Button, Typography, Grid } from \"@material-ui/core\"\nimport profilePic from \"../images/profilePic.png\"\n\nlet isMounted = false\n\nclass Profile extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      profile: null,\n      editing: false\n    }\n    this.setEdit = this.setEdit.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  setEdit() {\n    this.setState({\n      editing: !this.state.editing\n    })\n  }\n\n   handleChange(event) {\n\n    const {name, value} = event.target\n\n    this.setState({[name]: value})\n  }\n\n  componentDidMount() {\n\n    isMounted = true\n    db.collection(\"profiles\").where(\"uid\", \"==\", this.props.uid)\n    .onSnapshot(querySnapshot => {\n        querySnapshot.forEach(doc => {\n            if (isMounted) {\n              this.setState({\n              profile: doc.data(),\n              editing: false\n              })\n            }\n            \n        })\n    });\n\n  }\n\n  componentWillUnmount(){\n    isMounted = false\n  }\n\n  \n\n  render() {\n\n      const profilestyle = {\n        backgroundColor: \"#FAEBD7\",\n        paddingLeft: \"20px\",\n        paddingRight: \"20px\"\n      }\n\n    if (this.state.editing) {\n\n      return (\n      <div>\n        <EditProfile bio={this.state.profile.bio} setEdit={this.setEdit} uid={this.props.uid}/>\n        <br/>\n        <Button variant=\"outlined\" color=\"secondary\" onClick={this.setEdit}> Back to Profile </Button>   \n      </div>\n      )\n\n    }\n\n    else if (this.state.profile) {\n\n      return (\n      <div style={profilestyle}>\n        \n        <Typography variant=\"h3\" align=\"center\" color=\"secondary\"> {this.props.username} </Typography>\n        <hr/>\n        <Grid container spacing={4}>\n          <Grid item style={profilestyle} xs={6}>\n            {this.state.profile.imageUrl ? \n              <img src={this.state.profile.imageUrl} alt=\"\" height=\"500px\" width=\"500px\" /> :\n              <img src={profilePic} alt=\"\" height=\"500px\" width=\"500px\" />\n            }\n            \n          </Grid>\n          <Grid item xs={6}>\n            <Typography variant=\"h3\" align=\"left\" color=\"secondary\"> Collectables: (Coming soon!) </Typography>\n          </Grid>\n        </Grid>\n        \n        <Typography variant=\"h5\" align=\"left\" color=\"secondary\"> {this.state.profile.bio} </Typography>\n        <br/>\n        <Button variant=\"outlined\" color=\"secondary\" onClick={this.setEdit}> Edit Profile </Button>\n\n        <hr/>\n        <Typography variant=\"h3\" align=\"center\" color=\"secondary\"> My Trees </Typography>\n        <hr/>\n        <MyTrees uid={this.props.uid} username={this.props.username}/>\n\n        \n      </div>\n      )\n      \n    }\n\n    else {\n\n      return (\n        <div>\n          <Typography variant=\"h2\" align=\"left\" color=\"secondary\"> Loading... </Typography>\n        </div>\n      )\n\n    }\n    \n  }\n}\n\nexport default Profile","import React, { useState, useEffect } from \"react\"\n\nimport { Button, Typography, Grid, makeStyles } from \"@material-ui/core\"\n\nimport SignUp from \"./Auth/signUp\"\nimport LogIn from \"./Auth/logIn\"\nimport Home from \"./Home/home\"\nimport Feedback from \"./Home/feedback\"\nimport UploadTreeForm from \"./Upload/uploadTreeForm\"\nimport AdoptMap from \"./Find/adoptMap\"\nimport Profile from \"./Profile/profile\"\n\nimport treeImg from \"./images/tree.png\"\nimport \"./style.css\"\n\nimport { auth } from \"./firebase\"\n\nconst useStyles = makeStyles({\n  \n  buttonStyle: {\n    backgroundColor: \"#9ccc65\"\n  },\n  clickedButtonStyle: {\n    backgroundColor: \"black\",\n    color: \"white\"\n  },\n  title: {\n    display: \"inline\"\n  }\n\n})\n\nfunction Main(props) {\n\n  const [page, setPage] = useState(props.page)\n  const [user, setUser] = useState(null)\n\n  const classes = useStyles()\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(function(authUser)  {\n\n      if (authUser) {\n        setUser(authUser)\n       \n      } \n      else {\n        setUser(null)\n      }\n\n    })\n\n    return () => {\n      unsubscribe()\n    }\n\n  }, [user])\n\n\n    const headerstyle = {\n      textAlign: \"center\"\n    }\n\n    if (page === \"home\") {\n\n      return (\n        <div>\n\n          <div style={headerstyle}>\n\n          <img src={treeImg} alt=\"\" height=\"50\" width=\"50\" /> \n          <Typography className={classes.title} gutterBottom variant=\"h2\" align=\"center\" color=\"secondary\"> Public Tree </Typography>\n          <img src={treeImg} alt=\"\" height=\"50\" width=\"50\" />\n\n          <br/>\n          <br/>\n\n          <Button className={classes.clickedButtonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"home\")}>home</Button>\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"find\")}>find</Button>) :\n          null\n          }\n          \n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"upload\")}>upload</Button>) :\n          null\n          }\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"profile\")}>{user.displayName ? user.displayName : \"profile\"}</Button>) :\n          null\n          }\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => [auth.signOut(), setPage(\"home\")]}>logout</Button>) :\n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"login\")}>login</Button>)\n          }\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"feedback\")}>feedback</Button>) :\n          null\n          }\n\n          </div>\n\n          {user ?\n          <Home uid={user.uid} username={user.displayName} loggedIn={true} /> :\n          <Home loggedIn={false} />\n          }\n\n        </div>\n      )\n      \n      \n    }\n\n    \n    else if (page === \"find\") {\n\n      return (\n        <div>\n\n          <div style={headerstyle}>\n\n          <img src={treeImg} alt=\"\" height=\"50\" width=\"50\" />\n          <Typography className={classes.title} gutterBottom variant=\"h2\" align=\"center\" color=\"secondary\"> Public Tree </Typography>\n          <img src={treeImg} alt=\"\" height=\"50\" width=\"50\" />\n\n          <br/>\n          <br/>\n\n          <Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"home\")}>home</Button>\n\n          {user ? \n          (<Button className={classes.clickedButtonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"find\")}>find</Button>) :\n          null\n          }\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"upload\")}>upload</Button>) :\n          null\n          }\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"profile\")}>{user.displayName}</Button>) :\n          null\n          }\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => [auth.signOut(), setPage(\"home\")]}>logout</Button>) :\n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"login\")}>login</Button>)\n          }\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"feedback\")}>feedback</Button>) :\n          null\n          }\n\n\n          </div>\n\n\n          <br/>\n\n          <AdoptMap uid={user.uid} username={user.displayName} />\n\n\n\n        </div>\n      )\n    }\n\n    else if (page === \"upload\") {\n\n\n      return (\n        <div>\n\n          <div style={headerstyle}>\n\n          <img src={treeImg} alt=\"\" height=\"50\" width=\"50\" />\n          <Typography className={classes.title} gutterBottom variant=\"h2\" align=\"center\" color=\"secondary\"> Public Tree </Typography>\n          <img src={treeImg} alt=\"\" height=\"50\" width=\"50\" />\n\n          <br/>\n          <br/>\n\n          <Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"home\")}>home</Button>\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"find\")}>find</Button>) :\n          null\n          }\n          \n          {user ? \n          (<Button className={classes.clickedButtonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"upload\")}>upload</Button>) :\n          null\n          }\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"profile\")}>{user.displayName}</Button>) :\n          null\n          }\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => [auth.signOut(), setPage(\"home\")]}>logout</Button>) :\n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"login\")}>login</Button>)\n          }\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"feedback\")}>feedback</Button>) :\n          null\n          }\n\n\n          </div>\n\n          <UploadTreeForm uid={user.uid} username={user.displayName} />\n\n        </div>\n      )\n    }\n\n    else if (page === \"profile\") {\n\n\n      return (\n        <div>\n\n          <div style={headerstyle}>\n\n          <img src={treeImg} alt=\"\" height=\"50\" width=\"50\" />\n          <Typography className={classes.title} gutterBottom variant=\"h2\" align=\"center\" color=\"secondary\"> Public Tree </Typography>\n          <img src={treeImg} alt=\"\" height=\"50\" width=\"50\" />\n\n          <br/>\n          <br/>\n\n\n          <Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"home\")}>home</Button>\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"find\")}>find</Button>) :\n          null\n          }\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"upload\")}>upload</Button>) :\n          null\n          }\n\n          {user ? \n          (<Button className={classes.clickedButtonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"profile\")}>{user.displayName}</Button>) :\n          null\n          }\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => [auth.signOut(), setPage(\"home\")]}>logout</Button>) :\n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"login\")}>login</Button>)\n          }\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"feedback\")}>feedback</Button>) :\n          null\n          }\n\n\n          </div>\n\n        <br/>\n\n        <Profile uid={user.uid} username={user.displayName} setPage={setPage}/>\n\n        </div>\n      )\n    }\n\n    else if (page === \"login\") {\n\n\n      return (\n        <div>\n\n          <div style={headerstyle}>\n\n          <img src={treeImg} alt=\"\" height=\"50\" width=\"50\" />\n          <Typography className={classes.title} gutterBottom variant=\"h2\" align=\"center\" color=\"secondary\"> Public Tree </Typography>\n          <img src={treeImg} alt=\"\" height=\"50\" width=\"50\" />\n\n          <br/>\n          <br/>\n\n          <Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"home\")}>home</Button>\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"find\")}>find</Button>) :\n          null\n          }\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"upload\")}>upload</Button>) :\n          null\n          }\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"profile\")}>{user.displayName}</Button>) :\n          null\n          }\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => [auth.signOut(), setPage(\"home\")]}>logout</Button>) :\n          (<Button className={classes.clickedButtonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"login\")}>login</Button>)\n          }\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"feedback\")}>feedback</Button>) :\n          null\n          }\n\n          </div>\n\n          <br/>\n\n          <Grid container spacing={3}>\n            <Grid item xs={6}>\n              <SignUp setPage={setPage}/>\n            </Grid>\n            <Grid item xs={6}>\n              <LogIn setPage={setPage}/>\n            </Grid>\n          </Grid>\n\n        </div>\n      )\n    }\n\n    else if (page === \"feedback\") {\n\n\n      return (\n        <div>\n\n          <div style={headerstyle}>\n\n          <img src={treeImg} alt=\"\" height=\"50\" width=\"50\" />\n          <Typography className={classes.title} gutterBottom variant=\"h2\" align=\"center\" color=\"secondary\"> Public Tree </Typography>\n          <img src={treeImg} alt=\"\" height=\"50\" width=\"50\" />\n\n          <br/>\n          <br/>\n\n          <Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"home\")}>home</Button>\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"find\")}>find</Button>) :\n          null\n          }\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"upload\")}>upload</Button>) :\n          null\n          }\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"profile\")}>{user.displayName}</Button>) :\n          null\n          }\n\n          {user ? \n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => [auth.signOut(), setPage(\"home\")]}>logout</Button>) :\n          (<Button className={classes.buttonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"login\")}>login</Button>)\n          }\n\n          {user ? \n          (<Button className={classes.clickedButtonStyle} variant=\"outlined\" color=\"secondary\" onClick={() => setPage(\"feedback\")}>feedback</Button>) :\n          null\n          }\n\n          </div>\n\n          <br/>\n\n          <Feedback username={user.displayName} />\n\n\n        </div>\n      )\n    }\n\n    \n  \n    \n  }\n    \n\nexport default Main","import { createMuiTheme } from \"@material-ui/core/styles\"\n\nconst Theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#555555\",\n    },\n    secondary: {\n      main: \"#5d4037\"\n    }\n  }\n})\n\nexport default Theme","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Main from './main'\nimport Theme from \"./theme\"\nimport { ThemeProvider } from \"@material-ui/core/styles\"\n\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n\n    <ThemeProvider theme={Theme} >\n      <Main page=\"home\" />\n    </ThemeProvider>,\n  document.getElementById(\"root\")\n\n)\n\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/tree.aef0521d.png\";","module.exports = __webpack_public_path__ + \"static/media/star.d16819a1.png\";","module.exports = __webpack_public_path__ + \"static/media/profilePic.cd4f33f9.png\";"],"sourceRoot":""}